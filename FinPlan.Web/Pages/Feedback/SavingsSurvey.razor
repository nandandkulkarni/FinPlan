@page "/survey-savings-wealth-building"
@using FinPlan.Web.Components.Models
@using FinPlan.Web.Components.Survey
@using Microsoft.AspNetCore.Components
@using FinPlan.Web.Services
@using Microsoft.JSInterop
@inject IHttpClientFactory HttpClientFactory
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject FinPlan.Web.Services.UserGuidService UserGuidService
@inject IConfiguration Configuration


<div class="alert alert-info" style="margin-bottom:18px; border-radius:10px; font-size:1.05rem;">
    <strong>Thank you for trying the Savings & Wealth Building Planner</strong><br />
    We truly appreciate you taking the time to share your feedback. There are many questions below, but please feel free to answer only those you wishï¿½every response helps us improve. No personal information is collected
</div>

<SurveyForm Questions="@questions" Title="Savings & Wealth Building Planner - Survey" SurveyType="SavingsPlanner"/>


@code {
    private List<SurveyQuestion> questions = new()
    {
        // Navigation & Discovery
        new SurveyQuestion("How easy was it to find the Savings & Wealth Building Planner on the site?", new List<string>{"Very Easy","Easy","Neutral","Difficult","Very Difficult"}),

        // Instructions & Onboarding
        new SurveyQuestion("How clear were the instructions for starting and using the planner?", new List<string>{"Very Clear","Clear","Neutral","Unclear","Very Unclear"}),
        new SurveyQuestion("How easy was it to find advanced mode?", new List<string>{"Very Clear","Clear","Neutral","Unclear","Very Unclear"}),
        // Data Entry Experience
        new SurveyQuestion("How easy was it to enter your current age and planned retirement age?", new List<string>{"Very Easy","Easy","Neutral","Difficult","Very Difficult"}),
        new SurveyQuestion("How easy was it to enter your starting account balances (Taxable, Traditional, Roth)?", new List<string>{"Very Easy","Easy","Neutral","Difficult","Very Difficult"}),
        new SurveyQuestion("How easy was it to enter your monthly contributions for each account type?", new List<string>{"Very Easy","Easy","Neutral","Difficult","Very Difficult"}),
        new SurveyQuestion("How easy was it to set or understand the growth rate for each account type?", new List<string>{"Very Easy","Easy","Neutral","Difficult","Very Difficult"}),

        // Tax Settings
        new SurveyQuestion("How clear was the meaning of 'Taxable Income Type' and 'Tax Bracket' settings?", new List<string>{"Very Clear","Clear","Neutral","Unclear","Very Unclear"}),

        // Results & Projections
        new SurveyQuestion("How useful did you find the summary cards (Final Savings, Contributions, Growth, Taxes Paid)?", new List<string>{"Very Useful","Useful","Neutral","Not Useful","Did Not Use"}),
        new SurveyQuestion("How useful did you find the yearly projection table?", new List<string>{"Very Useful","Useful","Neutral","Not Useful","Did Not Use"}),
        new SurveyQuestion("How easy was it to interpret the yearly projection table?", new List<string>{"Very Easy","Easy","Neutral","Difficult","Very Difficult"}),

        // Tabs & Partner Mode
        new SurveyQuestion("How easy was it to switch between 'Your Savings' and 'Partner Savings' tabs?", new List<string>{"Very Easy","Easy","Neutral","Difficult","Very Difficult"}),

        // Performance & Satisfaction
        new SurveyQuestion("How would you rate the speed/performance of the planner?", new List<string>{"Excellent","Good","Average","Poor","Very Poor"}),
        new SurveyQuestion("Overall, how satisfied are you with the Savings & Wealth Building Planner?", new List<string>{"Very Satisfied","Satisfied","Neutral","Dissatisfied","Very Dissatisfied"}),
        new SurveyQuestion("How likely are you to recommend this planner to others?", new List<string>{"Very Likely","Likely","Neutral","Unlikely","Very Unlikely"}),

        // Open Feedback
        new SurveyQuestion("What did you like most about the Savings & Wealth Building Planner?"),
        new SurveyQuestion("What did you find confusing or difficult to use?"),
        new SurveyQuestion("What features would you like to see added or improved?"),
        new SurveyQuestion("Did you encounter any bugs or errors? Please describe."),
        new SurveyQuestion("Any other comments or suggestions?")
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var userGuid = await UserGuidService.GetOrCreateUserGuidAsync();
                var apiBaseUrl = Configuration["FinPlanSettings:ApiBaseUrlLocal"] ?? "https://localhost:7330";
                var client = HttpCustomClientService.CreateRetryClient(HttpClientFactory);
                var route = Navigation.ToBaseRelativePath(Navigation.Uri);
                string? ua = null;
                try { ua = await JSRuntime.InvokeAsync<string>("eval", "navigator.userAgent"); } catch { }
                var dto = new { Page = "Survey-Savings", Route = route, UserGuid = userGuid, UserAgent = ua };
                var json = System.Text.Json.JsonSerializer.Serialize(dto);
                using var content = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
                await client.PostAsync($"{apiBaseUrl}/api/Tracking/pageview", content);
            }
            catch { }
        }
    }
}