@page "/feedback"
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.JSInterop
@using FinPlan.Web.Services
@inject IHttpClientFactory HttpClientFactory
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject FinPlan.Web.Services.UserGuidService UserGuidService
@inject IConfiguration Configuration

<PageTitle>Feedback</PageTitle>

<div class="container py-3">
    <div class="text-center mb-3">
        <h3 class="mb-2">Feedback</h3>
        <p class="text-muted mb-0">Choose a planner to share your thoughts. No personal data collected.</p>
    </div>

    <div class="row g-3">
        <div class="col-12 col-md-4">
            <NavLink href="/survey-future-cost-of-living"
                     class="btn btn-outline-primary btn-lg w-100 d-flex align-items-center justify-content-center gap-2">
                <i class="bi bi-currency-dollar" aria-hidden="true"></i>
                <span>Cost of Living Survey</span>
            </NavLink>
        </div>

        <div class="col-12 col-md-4">
            <NavLink href="/survey-savings-wealth-building"
                     class="btn btn-outline-primary btn-lg w-100 d-flex align-items-center justify-content-center gap-2">
                <i class="bi bi-piggy-bank" aria-hidden="true"></i>
                <span>Savings &amp; Wealth Building Survey</span>
            </NavLink>
        </div>

        <div class="col-12 col-md-4">
            <NavLink href="/survey-retirement-income-planner"
                     class="btn btn-outline-primary btn-lg w-100 d-flex align-items-center justify-content-center gap-2">
                <i class="bi bi-wallet2" aria-hidden="true"></i>
                <span>Retirement Income Planner Survey</span>
            </NavLink>
        </div>
    </div>

    <div class="mt-3 text-center small text-muted">
        Thanks for helping us improve.
    </div>
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        try
        {
            var userGuid = await UserGuidService.GetOrCreateUserGuidAsync();
            var apiBaseUrl = Configuration["FinPlanSettings:ApiBaseUrlLocal"] ?? "https://localhost:7330";
            var client = HttpCustomClientService.CreateRetryClient(HttpClientFactory);
            var route = Navigation.ToBaseRelativePath(Navigation.Uri);

            string? ua = null;
            try { ua = await JSRuntime.InvokeAsync<string>("fpBrowserInfo.getUserAgent"); } catch { }

            var dto = new { Page = "Feedback", Route = route, UserGuid = userGuid, UserAgent = ua };
            var json = System.Text.Json.JsonSerializer.Serialize(dto);
            using var content = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
            await client.PostAsync($"{apiBaseUrl}/api/Tracking/pageview", content);
        }
        catch
        {
            // swallow tracking errors
        }
    }
}