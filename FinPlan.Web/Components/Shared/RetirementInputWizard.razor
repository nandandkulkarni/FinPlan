@using FinPlan.Shared.Models
@using FinPlan.Shared.Models.Spending
@using Microsoft.AspNetCore.Components
@using System.Reflection

<style>
    .wizard-step-bubble {
        width: 38px;
        height: 38px;
        border-radius: 50%;
        background: #6D5DFC; /* accent color used elsewhere */
        color: #fff;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-weight: 800;
        font-size: 1rem;
        box-shadow: 0 4px 12px rgba(109,93,252,0.18);
    }

    .wizard-header-row {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .wizard-step-text {
        color: var(--muted);
        font-size: 0.9rem;
    }

    .small-note {
        font-size: 0.85rem;
        color: var(--muted);
        margin-top: 4px;
    }

    .info-icon {
        font-size: 0.85rem;
        color: #1F6FEB;
        cursor: pointer;
        margin-left: 0.25rem;
        transition: transform 0.2s ease, color 0.2s ease;
    }

        .info-icon:hover {
            transform: scale(1.1);
            color: #0E62DA;
        }

    .info-tooltip {
        background-color: #EBF5FF;
        border: 1px solid #BEDAFF;
        border-radius: 6px;
        padding: 0.5rem 1rem;
        margin-top: 0.25rem;
        margin-bottom: 0.5rem;
        font-size: 0.85rem;
        position: relative;
        line-height: 1.4;
    }
</style>

@if (Visible)
{
    <div class="modal-backdrop fade show"></div>
    <div class="modal d-block" tabindex="-1" role="dialog" style="z-index:1055;">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="wizard-header-row">
                        <div class="wizard-step-bubble">@wizardStep</div>
                        <div>
                            <h5 class="modal-title" style="margin:0;">Retirement Plan Inputs</h5>
                            <div class="wizard-step-text">Step @wizardStep of 6</div>
                        </div>
                    </div>
                    <button type="button" class="btn-close" aria-label="Save & Close" @onclick="CloseClicked"></button>
                </div>
                <div class="modal-body" style="min-height:360px; max-height:520px; overflow:auto;">
                    @if (wizardStep == 1)
                    {
                        <label class="form-label">Retirement Ages & Life Expectancy</label>
                        <div class="row g-2">
                            <div class="col-md-6">
                                <label class="form-label">
                                    Retirement age (You)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipRetirementAgeYou = !showToolTipRetirementAgeYou" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipRetirementAgeYou)
                                {
                                    <div class="info-tooltip">
                                        <strong>Your Retirement Age:</strong> The age at which you plan to stop working and begin your retirement. This affects how long your portfolio needs to last and when you'll start drawing from retirement accounts.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipRetirementAgeYou = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.RetirementAgeYou" min="40" max="120" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    Retirement age (Partner)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipRetirementAgePartner = !showToolTipRetirementAgePartner" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipRetirementAgePartner)
                                {
                                    <div class="info-tooltip">
                                        <strong>Partner's Retirement Age:</strong> The age at which your partner plans to retire. Different retirement ages between partners can affect income timing and withdrawal strategies.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipRetirementAgePartner = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.RetirementAgePartner" min="40" max="120" />
                            </div>
                        </div>

                        <div class="row g-2 mt-3">
                            <div class="col-md-6">
                                <label class="form-label">
                                    Life expectancy (You)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipLifeExpectancyYou = !showToolTipLifeExpectancyYou" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipLifeExpectancyYou)
                                {
                                    <div class="info-tooltip">
                                        <strong>Your Life Expectancy:</strong> The age you expect to live to. Your retirement plan should ensure you don't outlive your savings. Consider adding a buffer to this estimate.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipLifeExpectancyYou = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="LifeExpectancyAgeYou" min="55" max="120" />
                                <div class="small-note">Controls simulation end age for you</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    Life expectancy (Partner)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipLifeExpectancyPartner = !showToolTipLifeExpectancyPartner" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipLifeExpectancyPartner)
                                {
                                    <div class="info-tooltip">
                                        <strong>Partner's Life Expectancy:</strong> The age your partner expects to live to. Different life expectancies can affect survivor benefits and legacy planning.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipLifeExpectancyPartner = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="LifeExpectancyAgePartner" min="55" max="120" />
                                <div class="small-note">Leave blank (0) to use same life expectancy as you</div>
                            </div>
                        </div>
                    }
                    else if (wizardStep == 2)
                    {
                        <label class="form-label">Starting Balances & Expected Returns</label>
                        <div class="row mb-2">
                            <div class="col-md-4">
                                <label class="form-label">
                                    Taxable ($)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipTaxableBalance = !showToolTipTaxableBalance" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipTaxableBalance)
                                {
                                    <div class="info-tooltip">
                                        <strong>Taxable Accounts:</strong> Non-retirement investment accounts that are subject to annual taxes on dividends, interest, and capital gains. These provide flexibility but without tax advantages of retirement accounts.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipTaxableBalance = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.TaxableBalance" step="1000" min="0" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">
                                    Traditional ($)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipTraditionalBalance = !showToolTipTraditionalBalance" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipTraditionalBalance)
                                {
                                    <div class="info-tooltip">
                                        <strong>Traditional Accounts:</strong> Tax-deferred retirement accounts like 401(k)s and Traditional IRAs. Contributions were tax-deductible, but withdrawals in retirement are taxed as ordinary income.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipTraditionalBalance = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.TraditionalBalance" step="1000" min="0" />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">
                                    Roth ($)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipRothBalance = !showToolTipRothBalance" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipRothBalance)
                                {
                                    <div class="info-tooltip">
                                        <strong>Roth Accounts:</strong> Tax-free growth retirement accounts like Roth IRAs and Roth 401(k)s. Contributions were made with after-tax dollars, so qualified withdrawals in retirement are tax-free.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipRothBalance = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.RothBalance" step="1000" min="0" />
                            </div>
                        </div>
                        <div class="mt-2 p-2" style="background:#f8f9fa; border-radius:6px;">
                            <strong>Total starting balance:</strong> @TotalStarting.ToString("C0")
                        </div>

                        <div class="row mb-2 mt-3">
                            <div class="col-md-6">
                                <label class="form-label">
                                    Expected Return (%)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipInvestmentReturn = !showToolTipInvestmentReturn" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipInvestmentReturn)
                                {
                                    <div class="info-tooltip">
                                        <strong>Expected Return:</strong> The average annual growth rate you expect from your investments before inflation. Historical average for a balanced portfolio is around 6-8%, but future returns may vary.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipInvestmentReturn = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.InvestmentReturn" step="0.1" min="-50" max="50" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    Expected Inflation (%)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipInflationRate = !showToolTipInflationRate" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipInflationRate)
                                {
                                    <div class="info-tooltip">
                                        <strong>Expected Inflation:</strong> The annual rate at which the purchasing power of money decreases. This affects your real returns and how much income you'll need in the future. Historical average is around 2-3%.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipInflationRate = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.InflationRate" step="0.1" min="-50" max="50" />
                            </div>
                        </div>
                    }
                    else if (wizardStep == 3)
                    {
                        <label class="form-label">Social Security</label>
                        <div class="row">
                            <div class="col-md-6 mb-2">
                                <label class="form-label">
                                    SS Start Age (You)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipSSStartAgeYou = !showToolTipSSStartAgeYou" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipSSStartAgeYou)
                                {
                                    <div class="info-tooltip">
                                        <strong>Your SS Start Age:</strong> The age you plan to claim Social Security. Benefits can start as early as 62 (reduced amount), at full retirement age (66-67 depending on birth year) for 100%, or delayed until 70 for maximum benefit (about 8% increase per year of delay).
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipSSStartAgeYou = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.SSStartAgeYou" min="50" max="100" />
                            </div>
                            <div class="col-md-6 mb-2">
                                <label class="form-label">
                                    Expected SS Monthly (You)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipSocialSecurityYou = !showToolTipSocialSecurityYou" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipSocialSecurityYou)
                                {
                                    <div class="info-tooltip">
                                        <strong>Your Social Security Benefit:</strong> Your expected monthly Social Security payment. You can estimate this amount from your earnings record at ssa.gov or from annual statements. The average benefit in 2023 is around $1,800 per month.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipSocialSecurityYou = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.SocialSecurityMonthlyYou" step="100" min="0" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-2">
                                <label class="form-label">
                                    SS Start Age (Partner)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipSSStartAgePartner = !showToolTipSSStartAgePartner" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipSSStartAgePartner)
                                {
                                    <div class="info-tooltip">
                                        <strong>Partner's SS Start Age:</strong> The age your partner plans to claim Social Security. Couples often coordinate claiming strategies to maximize lifetime benefits, especially if there's a significant age or income difference.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipSSStartAgePartner = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.SSStartAgePartner" min="50" max="100" />
                            </div>
                            <div class="col-md-6 mb-2">
                                <label class="form-label">
                                    Expected SS Monthly (Partner)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipSocialSecurityPartner = !showToolTipSocialSecurityPartner" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipSocialSecurityPartner)
                                {
                                    <div class="info-tooltip">
                                        <strong>Partner's Social Security Benefit:</strong> Your partner's expected monthly Social Security payment. If your partner didn't work enough to qualify, they may still be eligible for spousal benefits (typically 50% of your benefit).
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipSocialSecurityPartner = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.SocialSecurityMonthlyPartner" step="100" min="0" />
                            </div>
                        </div>
                    }
                    else if (wizardStep == 4)
                    {
                        <label class="form-label">Reverse Mortgage</label>
                        <div class="mb-2 form-check">
                            <input class="form-check-input" type="checkbox" id="rmEnabled" @bind="ReverseMortgageEnabled" />
                            <label class="form-check-label" for="rmEnabled">Enable reverse mortgage</label>
                            <div class="small-note">If enabled, reverse mortgage income will begin at the age below</div>
                        </div>

                        @if (ReverseMortgageEnabled)
                        {
                            <div class="row mb-2">
                                <div class="col-md-6">
                                    <label class="form-label">
                                        Reverse Mortgage Start Age
                                        <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipReverseMortgageStartAge = !showToolTipReverseMortgageStartAge" tabindex="0" title="Click for more info"></span>
                                    </label>
                                    @if (showToolTipReverseMortgageStartAge)
                                    {
                                        <div class="info-tooltip">
                                            <strong>Reverse Mortgage Start Age:</strong> The age when you plan to begin receiving payments from a reverse mortgage. This income source allows homeowners 62+ to convert home equity into tax-free income while continuing to live in their home.
                                            <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipReverseMortgageStartAge = false" title="Close">
                                                <span class="bi bi-x-lg"></span>
                                            </span>
                                        </div>
                                    }
                                    <input class="form-control" type="number" @bind="Model.ReverseMortgageStartAge" min="60" max="120" />
                                    <div class="small-note">Age when you start receiving reverse mortgage proceeds</div>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">
                                        Reverse Mortgage Monthly ($)
                                        <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipReverseMortgageMonthly = !showToolTipReverseMortgageMonthly" tabindex="0" title="Click for more info"></span>
                                    </label>
                                    @if (showToolTipReverseMortgageMonthly)
                                    {
                                        <div class="info-tooltip">
                                            <strong>Monthly Reverse Mortgage Payment:</strong> The estimated monthly income you expect to receive from your reverse mortgage. The amount depends on your home value, interest rates, your age, and the specific payment plan you choose.
                                            <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipReverseMortgageMonthly = false" title="Close">
                                                <span class="bi bi-x-lg"></span>
                                            </span>
                                        </div>
                                    }
                                    <input class="form-control" type="number" @bind="Model.ReverseMortgageMonthly" step="100" min="0" />
                                </div>
                            </div>
                        }
                    }
                    else if (wizardStep == 5)
                    {
                        <label class="form-label">Withdrawal Strategy</label>
                        <div class="row mb-2">
                            <div class="col-md-6">
                                <label class="form-label">
                                    Annual Withdrawal: One Retired
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipWithdrawalOne = !showToolTipWithdrawalOne" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipWithdrawalOne)
                                {
                                    <div class="info-tooltip">
                                        <strong>Annual Withdrawal (One Retired):</strong> The amount you plan to withdraw annually from your portfolio when only one of you is retired. This is typically less than when both partners are retired since one person is still earning income.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipWithdrawalOne = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.AnnualWithdrawalOne" step="1000" min="0" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    Annual Withdrawal: Both Retired
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipWithdrawalBoth = !showToolTipWithdrawalBoth" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipWithdrawalBoth)
                                {
                                    <div class="info-tooltip">
                                        <strong>Annual Withdrawal (Both Retired):</strong> The amount you plan to withdraw annually from your portfolio when both of you are retired. This often needs to be higher than when one person is retired since you'll be relying entirely on portfolio income and Social Security.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipWithdrawalBoth = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.AnnualWithdrawalBoth" step="1000" min="0" />
                            </div>
                        </div>
                    }
                    else if (wizardStep == 6)
                    {
                        <label class="form-label">Current Ages & Simulation Settings</label>
                        <div class="row g-2">
                            <div class="col-md-6">
                                <label class="form-label">
                                    Current Age (You)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipCurrentAgeYou = !showToolTipCurrentAgeYou" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipCurrentAgeYou)
                                {
                                    <div class="info-tooltip">
                                        <strong>Your Current Age:</strong> Your age today. This is the starting point for all retirement calculations and determines how many years you have to prepare before retirement.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipCurrentAgeYou = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.CurrentAgeYou" min="18" max="120" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    Current Age (Partner)
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipCurrentAgePartner = !showToolTipCurrentAgePartner" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipCurrentAgePartner)
                                {
                                    <div class="info-tooltip">
                                        <strong>Partner's Current Age:</strong> Your partner's age today. Enter 0 if you're planning for yourself only. This affects joint retirement planning, especially with age differences.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipCurrentAgePartner = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.CurrentAgePartner" min="0" max="120" />
                                <div class="small-note">Leave as 0 if no partner</div>
                            </div>
                        </div>
                        <div class="row g-2 mt-3">
                            <div class="col-md-6">
                                <label class="form-label">
                                    Projection Start Year
                                    <span class="bi bi-info-circle info-icon" @onclick="() => showToolTipSimulationStartYear = !showToolTipSimulationStartYear" tabindex="0" title="Click for more info"></span>
                                </label>
                                @if (showToolTipSimulationStartYear)
                                {
                                    <div class="info-tooltip">
                                        <strong>Projection Start Year:</strong> The calendar year when this retirement analysis begins (typically the current year). All timeline projections, including retirement dates and Social Security benefits, are calculated from this starting point.
                                        <span class="float-end" style="cursor:pointer;" @onclick="() => showToolTipSimulationStartYear = false" title="Close">
                                            <span class="bi bi-x-lg"></span>
                                        </span>
                                    </div>
                                }
                                <input class="form-control" type="number" @bind="Model.SimulationStartYear" />
                                <div class="small-note">Year to begin the retirement simulation</div>
                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" aria-label="Save & Close" @onclick="CloseClicked">Save & Close</button>
                    <button type="button" class="btn btn-primary" @onclick="PrevwizardStep" disabled="@(wizardStep == 1)">Previous</button>
                    <button type="button" class="btn btn-primary" @onclick="NextOrSubmit">@(wizardStep == 6 ? "Save & Finish" : "Save & Next")</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public CalendarSpendingModel? Model { get; set; }

    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<bool> VisibleChanged { get; set; }

    [Parameter]
    public EventCallback<(int AgeYou, int AgePartner)> OnFinished { get; set; }

    [Parameter]
    public EventCallback OnSave { get; set; }

    [Parameter]
    public int InitialStep { get; set; } = 1;

    private int wizardStep = 1;
    private bool _wasVisible = false;
    private int _lastInitialStep = 1;

    // Tooltip visibility flags
    private bool showToolTipRetirementAgeYou = false;
    private bool showToolTipRetirementAgePartner = false;
    private bool showToolTipLifeExpectancyYou = false;
    private bool showToolTipLifeExpectancyPartner = false;
    private bool showToolTipTaxableBalance = false;
    private bool showToolTipTraditionalBalance = false;
    private bool showToolTipRothBalance = false;
    private bool showToolTipInvestmentReturn = false;
    private bool showToolTipInflationRate = false;
    private bool showToolTipSocialSecurityYou = false;
    private bool showToolTipSocialSecurityPartner = false;
    private bool showToolTipSSStartAgeYou = false;
    private bool showToolTipSSStartAgePartner = false;
    private bool showToolTipReverseMortgageStartAge = false;
    private bool showToolTipReverseMortgageMonthly = false;
    private bool showToolTipWithdrawalOne = false;
    private bool showToolTipWithdrawalBoth = false;
    private bool showToolTipCurrentAgeYou = false;
    private bool showToolTipCurrentAgePartner = false;
    private bool showToolTipSimulationStartYear = false;

    private decimal TotalStarting => (Model?.TaxableBalance ?? 0) + (Model?.TraditionalBalance ?? 0) + (Model?.RothBalance ?? 0);

    protected override void OnParametersSet()
    {
        if (Model == null)
        {
            Model = new CalendarSpendingModel();
        }

        if (Visible)
        {
            if (!_wasVisible)
            {
                if (InitialStep >= 1 && InitialStep <= 6)
                {
                    wizardStep = InitialStep;
                }
                _lastInitialStep = InitialStep;
            }
            else if (InitialStep != _lastInitialStep)
            {
                if (InitialStep >= 1 && InitialStep <= 6)
                {
                    wizardStep = InitialStep;
                }
                _lastInitialStep = InitialStep;
            }
        }

        _wasVisible = Visible;
    }

    private async Task PrevwizardStep()
    {
        if (wizardStep > 1)
        {
            TrySyncModel();
            await InvokeOnSaveSafe();
            wizardStep--;
            StateHasChanged();
        }
    }

    private async Task NextOrSubmit()
    {
        if (wizardStep < 6)
        {
            // minimal validation for step 1
            if (wizardStep == 1 && (Model?.RetirementAgeYou ?? 0) <= 0) return;

            TrySyncModel();
            await InvokeOnSaveSafe();

            wizardStep++;
            StateHasChanged();
            return;
        }

        // final step: sync, save, and close
        TrySyncModel();

        if (OnSave.HasDelegate)
        {
            await OnSave.InvokeAsync();
        }
        if (OnFinished.HasDelegate && Model != null)
        {
            await OnFinished.InvokeAsync((Model.RetirementAgeYou, Model.RetirementAgePartner));
        }

        Visible = false;
        await VisibleChanged.InvokeAsync(false);
        wizardStep = 1;
    }

    private async Task CloseClicked()
    {
        TrySyncModel();
        await InvokeOnSaveSafe();

        Visible = false;
        await VisibleChanged.InvokeAsync(false);
        wizardStep = 1;
    }

    private void TrySyncModel()
    {
        try
        {
            Model?.SyncRetirementYearsFromAges();
        }
        catch { }
    }

    private async Task InvokeOnSaveSafe()
    {
        try
        {
            if (OnSave.HasDelegate)
            {
                await OnSave.InvokeAsync();
            }
        }
        catch { }
    }

    // Conversion helpers for life expectancy (age vs year)
    private int LifeExpectancyAgeYou
    {
        get
        {
            if (Model == null) return 100;
            var v = Model.LifeExpectancyYou;
            if (v > 1900)
            {
                var currentAge = Model.CurrentAgeYou > 0 ? Model.CurrentAgeYou : 0;
                return currentAge > 0 ? currentAge + (v - DateTime.Now.Year) : v - DateTime.Now.Year;
            }
            return v;
        }
        set
        {
            if (Model == null) return;
            if (Model.LifeExpectancyYou > 1900)
            {
                var baseAge = Model.CurrentAgeYou > 0 ? Model.CurrentAgeYou : 0;
                Model.LifeExpectancyYou = DateTime.Now.Year + (value - baseAge);
            }
            else
            {
                Model.LifeExpectancyYou = value;
            }
        }
    }

    private int LifeExpectancyAgePartner
    {
        get
        {
            if (Model == null) return 100;
            var v = Model.LifeExpectancyPartner;
            if (v > 1900)
            {
                var currentAge = Model.CurrentAgePartner > 0 ? Model.CurrentAgePartner : 0;
                return currentAge > 0 ? currentAge + (v - DateTime.Now.Year) : v - DateTime.Now.Year;
            }
            return v;
        }
        set
        {
            if (Model == null) return;
            if (Model.LifeExpectancyPartner > 1900)
            {
                var baseAge = Model.CurrentAgePartner > 0 ? Model.CurrentAgePartner : 0;
                Model.LifeExpectancyPartner = DateTime.Now.Year + (value - baseAge);
            }
            else
            {
                Model.LifeExpectancyPartner = value;
            }
        }
    }

    private bool ReverseMortgageEnabled
    {
        get => Model != null && Model.ReverseMortgageStartAge > 0;
        set
        {
            if (Model == null) return;
            if (value)
            {
                if (Model.ReverseMortgageStartAge == 0) Model.ReverseMortgageStartAge = Math.Max(60, Model.CurrentAgeYou);
            }
            else
            {
                Model.ReverseMortgageStartAge = 0;
            }
        }
    }
}