@page "/retirement-income-planner"
@using Microsoft.AspNetCore.Components
@using System.Collections.Generic
@using FinPlan.Web.Components
@using FinPlan.Shared.Models.Spending
@using FinPlan.Web.Components.Shared
@namespace FinPlan.Web.Components.Pages
@using Microsoft.AspNetCore.Components.Web

<PageTitle>Retirement Income Planner</PageTitle>

<!-- Retirement input wizard: shown when _isDataAvaiableForTheUser is true -->
<RetirementInputWizard Model="@Model" Visible="@_isDataAvaiableForTheUser" VisibleChanged="@(v => _isDataAvaiableForTheUser = v)" OnFinished="HandleWizardFinished" OnSave="Save" InitialStep="@_wizardOpenStep" />

<style>
    :root {
        --brand-yellow: #FFD600;
        --muted: #6c757d;
        --bg: #f8f9fa;
        --card-bg: #ffffff;
        --card-radius: 10px;
        --accent: #6D5DFC;
        --danger: #F56565;
        --success: #38B2AC;
        --info: #4FD1C5;
        --financial-blue: #2563EB;
        --financial-gray: #6B7280;
        --financial-green: #059669;
        --financial-amber: #D97706;
        --background-subtle: #F8FAFC;


    }

    thead th {
        position: sticky;
        top: 0;
        background: #fff;
        padding: 10px 12px;
        border-bottom: 2px solid #d1d5db;
        text-align: left;
        font-weight: 700;
        color: #333;
    }

    /* Professional column styling with subtle backgrounds and left borders */
    .col-income-sources {
        background-color: rgba(5, 150, 105, 0.02);
        border-left: 1px solid #059669;
    }
    
    .col-account-activity {
        background-color: rgba(37, 99, 235, 0.02);
        border-left: 1px solid #2563EB;
    }
    
    .col-ending-balances {
        background-color: rgba(107, 114, 128, 0.02);
        border-left: 1px solid #6B7280;
    }

    .container-wire {
        padding: 14px;
    }

    /* Page header */
    .page-header {
        text-align: center;
        font-weight: 700;
        font-size: 1.45rem; /* increased from 1.35rem */
        margin-bottom: 12px;
        color: #111;
    }

    /* Top area contains sidebars + input panels. Sidebars are only present inside this area so the grid below is full width */
    .top-area {
        position: relative;
    }

    /* Wrapper around the input panels to give a yellow border that stops where the grid starts */
    .input-panel-wrapper {
        margin-left: 180px; /* leave room for mini sidebars */
        margin-right: 180px;
        border: 2px solid var(--brand-yellow);
        border-radius: 10px;
        padding: 10px;
        background: #ffffff;
        box-shadow: 0 6px 18px rgba(22,28,36,0.03);
    }

    .top-panel {
        display: flex;
        gap: 12px;
        align-items: stretch; /* ensure left and right panels have equal height */
        margin-bottom: 0; /* moved spacing to wrapper */
    }

    .panel {
        background: var(--card-bg);
        border-radius: var(--card-radius);
        box-shadow: 0 6px 18px rgba(22,28,36,0.06);
        padding: 12px;
        border: 1px solid rgba(0,0,0,0.03);
        display: flex; /* make panels flex columns so actions can stick to bottom */
        flex-direction: column;
        flex: 1 1 0%; /* allow panels to grow equally and match height */
    }

    /* Section card variant used inside the Plan Sections grid */
    .section-card {
        /* darker border for stronger separation from the background */
        border: 1px solid rgba(16,24,36,0.12);
        padding: 10px;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        min-height: 92px;
        background: #fff;
    }

        .section-card .actions {
            margin-top: auto; /* push to bottom of the card */
            display: flex;
            justify-content: flex-start; /* left align actions */
            gap: 8px;
            padding-top: 6px; /* extra breathing room above the Edit button */
        }

    .btn-edit {
        background: #1F6FEB; /* professional blue */
        color: #ffffff;
        border: 0;
        padding: 7px 12px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
    }


    /* Highlighted rectangular panel with yellow border and subtle shadow */
    .section-panel {
        border: 3px solid var(--brand-yellow);
        border-radius: 10px;
        box-shadow: 0 12px 30px rgba(13,38,76,0.06), 0 4px 18px rgba(255,214,0,0.08);
        padding: 14px; /* add extra padding so inner .panel spacing aligns visually */
        background: linear-gradient(180deg, #fff, #fff);
    }

    /* Mini sidebars that only cover the top area */
    .left-sidebar-mini, .right-sidebar-mini {
        position: absolute;
        left: 0;
        right: auto;
        top: 0;
        bottom: 0; /* stretch to top-area height */
        width: 160px;
        padding: 10px;
        box-shadow: 0 6px 18px rgba(22,28,36,0.06);
        border-radius: 8px;
        background: linear-gradient(180deg, #ffffff, #fbfbfb);
        border: 1px solid rgba(0,0,0,0.03);
        z-index: 10;
        font-size: 0.95rem; /* increased slightly */
        overflow: auto;
    }

    .left-sidebar-mini {
        left: 0;
    }

    /* Make the right mini sidebar stick to the viewport right edge */
    .right-sidebar-mini {
        position: fixed;
        top: 96px; /* offset below top navigation; adjust if header height changes */
        right: 16px;
        left: auto;
        bottom: auto;
        width: 160px;
        max-height: calc(100vh - 120px);
        z-index: 1050;
    }

    /* Make left and right panels split 50/50 and stay same height */
    .left-col, .right-col {
        flex: 1 1 0%;
        min-width: 320px;
    }

    .panel h4 {
        margin: 0 0 8px 0;
        font-size: 1.12rem; /* increased from 1.02rem */
        color: #111;
    }
    /* Slightly tighter form rows */
    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 6px;
        margin-bottom: 6px;
        align-items: start;
    }

    label {
        display: block;
        font-size: 0.92rem; /* increased from 0.82rem */
        color: var(--muted);
        margin-bottom: 4px;
    }

    input[type="number"], input[type="text"], select {
        width: 100%;
        padding: 6px 8px;
        border-radius: 6px;
        border: 1px solid #e6e9ee;
        background: #fff;
        font-size: 1.02rem; /* increased from 0.92rem */
    }

    .money {
        font-weight: 700;
        color: #0b2545;
    }

    .small-note {
        font-size: 0.9rem; /* increased from 0.8rem */
        color: var(--muted);
        margin-top: 4px;
    }

    .actions {
        display: flex;
        gap: 8px;
        justify-content: flex-end;
        margin-top: 8px;
    }
    /* push actions to bottom of panel */
    .panel .actions {
        margin-top: auto;
    }

    .btn {
        padding: 7px 10px;
        border-radius: 8px;
        border: 0;
        cursor: pointer;
        font-weight: 600;
        font-size: 1.05rem; /* increased from 0.95rem */
    }

    .btn-primary {
        background: var(--accent);
        color: white;
        box-shadow: 0 6px 20px rgba(109,93,252,0.12);
    }

    .btn-ghost {
        background: transparent;
        border: 1px solid #e6e9ee;
        color: #333;
    }

    .btn-outline-danger {
        background: transparent;
        border: 2px solid #F56565;
        color: #F56565;
    }

    .badge {
        display: inline-block;
        padding: 6px 8px;
        border-radius: 999px;
        font-size: 0.85rem; /* increased from 0.75rem */
        background: #f1f3f5;
        color: #222;
        margin-right: 6px;
    }

        .badge.milestone {
            background: var(--brand-yellow);
            color: #111;
            font-weight: 700;
        }

    .grid-panel {
        margin-top: 12px;
    }

    .grid-header {
        display: flex;
        gap: 12px;
        align-items: center;
        margin-bottom: 8px;
    }

    .grid {
        width: 100%;
        border-radius: 8px;
        overflow: auto;
        background: #fff;
        border: 1px solid #e9ecef;
        box-shadow: 0 8px 24px rgba(12,18,30,0.04);
    }

    table {
        width: 100%;
        border-collapse: collapse;
        font-size: 0.98rem; /* increased from 0.88rem */
        min-width: 1100px;
    }

    /* thead th {
        position: sticky;
        top: 0;
        background: #fff;
        padding: 10px 12px;
        border-bottom: 1px solid #eef2f6;
        text-align: left;
        font-weight: 700;
        color: #333;
    } */

    tbody td {
        padding: 8px 12px;
        border-bottom: 1px solid #f2f4f7;
        vertical-align: middle;
    }

    tr.depleted {
        background: linear-gradient(90deg, rgba(245,101,101,0.05), transparent);
        color: var(--danger);
    }

    tr.milestone-row td {
        background: linear-gradient(90deg, rgba(255,214,0,0.06), transparent);
    }

    .col-year {
        width: 80px;
        font-weight: 700;
    }

    .col-age {
        width: 70px;
        color: var(--muted);
    }

    .col-milestones {
        width: 200px;
    }

    .money-cell {
        text-align: right;
        font-variant-numeric: tabular-nums;
    }

    .legend {
        margin-left: auto;
        display: flex;
        gap: 8px;
        align-items: center;
        font-size: 0.95rem; /* increased from 0.85rem */
        color: var(--muted);
    }

        .legend .swatch {
            width: 14px;
            height: 14px;
            border-radius: 4px;
            display: inline-block;
        }

    /* Narrow helper class for year and short numeric fields */
    .narrow {
        max-width: 140px;
    }

    @@media (max-width:1024px) {
        .top-panel {
            flex-direction: column;
            margin-left: 0;
            margin-right: 0
        }

        .left-col {
            width: 100%;
            flex: 0 0 auto;
        }

        .right-col {
            min-width: 0;
        }

        .left-sidebar-mini, .right-sidebar-mini {
            display: none;
        }

        table {
            min-width: 900px;
        }

        .input-panel-wrapper {
            margin-left: 0;
            margin-right: 0;
        }
    }

    .step-badge {
        width: 36px;
        height: 36px;
        min-width: 36px;
        border-radius: 50%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        /* Use yellow fill for retirement page for consistency with section highlight */
        background: var(--brand-yellow);
        color: #111; /* dark text on yellow */
        font-weight: 800;
        font-size: 1rem;
        box-shadow: 0 4px 12px rgba(0,0,0,0.12);
        margin-right: 8px;
        flex-shrink: 0;
    }
</style>
<div class="container-wire">
    <div class="page-header">
        <h3>Retire Income Planner</h3>
    </div>
    @* <!-- Prominent actions: Edit and Clear All -->
    <div style="display:flex; gap:12px; align-items:center; margin-bottom:12px;">
        <button class="btn btn-primary" style="padding:10px 16px; font-weight:700;" @onclick="() => OpenWizard(1)">Edit assumptions</button>
        <button class="btn btn-outline-danger" style="padding:10px 16px; font-weight:700;" @onclick="ConfirmClearAll">Clear all & reset</button>
        <div style="margin-left:12px; color:#6c757d;">Edit assumptions opens the quick setup wizard to change retirement ages, balances, returns, Social Security and withdrawal settings. Clear all will reset your saved plan then open the wizard so you can re-enter values.</div>
    </div> *@

    <!-- Confirmation modal for clearing -->
    @if (showClearConfirm)
    {
        <div class="modal-backdrop fade show" style="z-index:1040"></div>
        <div class="modal d-block" tabindex="-1" role="dialog" style="z-index:1050;">
            <div class="modal-dialog modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirm clear</h5>
                        <button type="button" class="btn-close" aria-label="Close" @onclick="() => showClearConfirm = false"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to clear all saved values? This will reset your plan and cannot be undone.</p>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-ghost" @onclick="() => showClearConfirm = false">Cancel</button>
                        <button class="btn btn-outline-danger" @onclick="PerformClearAll">Clear all</button>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Result modal (after clear) -->
    @if (showClearResult)
    {
        <div class="modal-backdrop fade show" style="z-index:1040"></div>
        <div class="modal d-block" tabindex="-1" role="dialog" style="z-index:1050;">
            <div class="modal-dialog modal-sm" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Clear result</h5>
                        <button type="button" class="btn-close" aria-label="Close" @onclick="CloseClearResult"></button>
                    </div>
                    <div class="modal-body">
                        @if (clearSucceeded)
                        {
                            <p>All saved values were cleared successfully.</p>
                        }
                        else
                        {
                            <p>Clear failed. Your data may not have been removed from the server. The local plan was reset.</p>
                        }
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary" @onclick="CloseClearResult">OK</button>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="top-area">
        <div class="container-fluid">
            <div class="row g-3">
                <!-- Left mini column (2) -->
                <div class="col-12 col-md-2">
                    <div class="panel">
                        <div style="font-weight:700; margin-bottom:8px;">Quick Links</div>
                        <div style="display:flex; flex-direction:column; gap:6px;">
                            <a href="/" class="badge">Home</a>
                            <a href="/guides/how-to-use-drawdown-calculator" class="badge">How to</a>
                            <a href="/contact" class="badge">Contact</a>
                        </div>
                        <div style="margin-top:10px; font-size:0.85rem; color:var(--muted);">Mini summary</div>
                        <div style="margin-top:6px; background:#f8fafc; padding:8px; border-radius:6px;">Post-Tax <br /><strong>@Model.TaxableBalance.ToString("C0")</strong></div>
                    </div>
                </div>

                <!-- Center combined column (8) -> Sections -->
                <div class="col-12 col-md-8">
                    <div class="panel section-panel">
                        <h4>Plan Input Data</h4>

                        <div style="display:grid; grid-template-columns: repeat(3, 1fr); gap:12px;">
                            @* Section 1: Retirement ages & life expectancy *@
                            <div class="section-card">
                                <div>
                                    <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                                        <span class="step-badge">1</span>
                                        <div>Retirement ages & life expectancy</div>
                                    </div>
                                    <div class="small-note" style="margin-top:8px;">You: @Model.RetirementAgeYou</div>
                                    <div class="small-note" style="margin-top:8px;">Partner: @Model.RetirementAgePartner</div>
                                    <div class="small-note" style="margin-top:8px;">Life exp (You): @DisplayLifeExpectancyYou</div>
                                    <div class="small-note" style="margin-top:8px;">Life exp (Partner): @DisplayLifeExpectancyPartner</div>

                                </div>
                                <div class="actions">
                                    <button class="btn-edit" @onclick="() => OpenWizard(1)">Edit</button>
                                </div>
                            </div>

                            @* Section 2: Starting balances & returns *@
                            <div class="section-card">
                                <div>
                                    <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                                        <span class="step-badge">2</span>
                                        <div>Starting Balances & Returns</div>
                                    </div>
                                    <div class="small-note" style="margin-top:8px;">Taxable: @Model.TaxableBalance.ToString("C0")</div>
                                    <div class="small-note">Traditional: @Model.TraditionalBalance.ToString("C0")</div>
                                    <div class="small-note">Roth: @Model.RothBalance.ToString("C0")</div>
                                    <div class="small-note" style="margin-top:8px; padding-top:6px; border-top:1px solid #e9ecef;">Expected Return: @Model.InvestmentReturn.ToString("F1")%</div>
                                    <div class="small-note">Expected Inflation: @Model.InflationRate.ToString("F1")%</div>
                                </div>
                                <div class="actions">
                                    <button class="btn-edit" @onclick="() => OpenWizard(2)">Edit</button>
                                </div>
                            </div>

                            @* Section 3: Social Security *@
                            <div class="section-card">
                                <div>
                                    <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                                        <span class="step-badge">3</span>
                                        <div>Social Security</div>
                                    </div>
                                    <div class="small-note" style="margin-top:8px;">Expected SS/mo (You): @Model.SocialSecurityMonthlyYou.ToString("C0")</div>
                                    <div class="small-note" style="margin-top:8px;">Expected SS/mo (Partner): @Model.SocialSecurityMonthlyPartner.ToString("C0")</div>

                                    <div class="small-note" style="margin-top:8px;">SS Start Age (You): @Model.SSStartAgeYou </div>
                                    <div class="small-note" style="margin-top:8px;">SS Start Age (Partner): @Model.SSStartAgePartner</div>
                                </div>
                                <div class="actions">
                                    <button class="btn-edit" @onclick="() => OpenWizard(3)">Edit</button>
                                </div>
                            </div>

                            @* Section 4: Reverse mortgage *@
                            <div class="section-card">
                                <div>
                                    <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                                        <span class="step-badge">4</span>
                                        <div>Reverse mortgage</div>
                                    </div>
                                    <div class="small-note" style="margin-top:8px;">Start year: @Model.ReverseMortgageStartYear</div>
                                    <div class="small-note" style="margin-top:8px;">Monthly: @Model.ReverseMortgageMonthly.ToString("C0")</div>

                                </div>
                                <div class="actions">
                                    <button class="btn-edit" @onclick="() => OpenWizard(4)">Edit</button>
                                </div>
                            </div>

                            @* Section 5: Planned annual withdrawals *@
                            <div class="section-card">
                                <div>
                                    <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                                        <span class="step-badge">5</span>
                                        <div>Withdrawal Strategy</div>
                                    </div>
                                    <div class="small-note" style="margin-top:8px;">One retired: @Model.AnnualWithdrawalOne.ToString("C0")</div>
                                    <div class="small-note" style="margin-top:8px;">Both retired: @Model.AnnualWithdrawalBoth.ToString("C0")</div>

                                </div>
                                <div class="actions">
                                    <button class="btn-edit" @onclick="() => OpenWizard(5)">Edit</button>
                                </div>
                            </div>

                            @* Section 6: Current ages & simulation *@
                            <div class="section-card">
                                <div>
                                    <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                                        <span class="step-badge">6</span>
                                        <div>Current Ages & Simulation</div>
                                    </div>
                                    <div class="small-note" style="margin-top:8px;">You: @Model.CurrentAgeYou</div>
                                    <div class="small-note" style="margin-top:8px;">Partner: @Model.CurrentAgePartner</div>
                                    <div class="small-note" style="margin-top:8px;">Projection start year: @Model.SimulationStartYear </div>
                                </div>
                                <div class="actions">
                                    <button class="btn-edit" @onclick="() => OpenWizard(6)">Edit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Right column (2) -->
                <div class="col-12 col-md-2">
                    <div class="panel">
                        <div style="font-weight:700; margin-bottom:8px; display:flex; justify-content:space-between; align-items:center;">
                            <div>Debug</div>
                            <div>
                                <button class="btn-ghost" style="padding:4px 6px; font-size:0.8rem;" @onclick="ToggleRightDebug">Toggle</button>
                            </div>
                        </div>
                        <div style="font-size:0.85rem; color:var(--muted);">Toggle messages</div>
                        @if (ShowRightDebug)
                        {
                            <div style="margin-top:8px; background:#fbfbfb; padding:8px; border-radius:6px; max-height:200px; overflow:auto;">
                                @foreach (var msg in DebugService.Messages.OrderByDescending(m => m.MessageTime))
                                {
                                    <div style="margin-bottom:6px;">
                                        <small style="color:var(--muted);">@msg.MessageTime.ToString("HH:mm:ss")</small>
                                        <div>@msg.MessageText</div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div style="margin-top:8px; background:#fbfbfb; padding:8px; border-radius:6px; max-height:120px; overflow:auto;">No messages</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Full-width grid placeholder -->
    <div class="grid-panel panel">
        <div class="grid-header">
            <div style="font-weight:800; font-size:1rem;">Yearly Projection</div>
            <div class="legend">
                <div style="display:flex; gap:8px; align-items:center;"><span class="swatch" style="background:var(--brand-yellow)"></span><small> Milestone</small></div>
                <div style="display:flex; gap:8px; align-items:center;"><span class="swatch" style="background:var(--success)"></span><small> Growth</small></div>
                <div style="display:flex; gap:8px; align-items:center;"><span class="swatch" style="background:var(--danger)"></span><small> Depletion</small></div>
            </div>
        </div>
        <div class="grid">
            <table aria-label="Yearly grid wireframe">
                <thead class="table-light">
                    <tr>
                        <!-- Basic Info -->
                        <th class="col-year" style="text-align:right; width:120px; padding:18px 12px; background-color: var(--background-subtle);">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Year</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Calendar</span>
                            </div>
                        </th>

                        <th class="col-age" style="padding:18px 12px; background-color: var(--background-subtle);">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Your</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Age</span>
                            </div>
                        </th>

                        <th class="col-age" style="padding:18px 12px; background-color: var(--background-subtle);">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Partner</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Age</span>
                            </div>
                        </th>

                        <th class="col-milestones" style="padding:18px 12px; background-color: var(--background-subtle);">
                            <div style="display:flex;flex-direction:column;align-items:flex-start;text-align:left;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Milestones</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Events</span>
                            </div>
                        </th>

                        <th class="text-end" style="padding:18px 12px; background-color: var(--background-subtle);">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Amount</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Needed</span>
                            </div>
                        </th>

                        <!-- Income Sources -->
                        <th class="col-income-sources" style="padding:18px 12px;">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Social Security</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">You</span>
                            </div>
                        </th>

                        <th class="col-income-sources" style="padding:18px 12px;">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Social Security</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Partner</span>
                            </div>
                        </th>

                        <th class="col-income-sources" style="padding:18px 12px;">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Reverse</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Mortgage</span>
                            </div>
                        </th>

                        <!-- Account Activity -->
                        <th class="text-end col-account-activity" style="padding:18px 12px;">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Growth</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Investment</span>
                            </div>
                        </th>

                        <th class="text-end col-account-activity" style="padding:18px 12px;">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Withdrawal</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Taxable</span>
                            </div>
                        </th>

                        <th class="text-end col-account-activity" style="padding:18px 12px;">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Withdrawal</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Traditional</span>
                            </div>
                        </th>

                        <th class="text-end col-account-activity" style="padding:18px 12px;">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Withdrawal</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Roth</span>
                            </div>
                        </th>

                        <th class="text-end" style="padding:18px 12px; background-color: var(--background-subtle); border-left: 1px solid #e9ecef;">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Taxes</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Paid</span>
                            </div>
                        </th>

                        <!-- Ending Balances -->
                        <th class="text-end col-ending-balances" style="padding:18px 12px;">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Taxable</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Ending</span>
                            </div>
                        </th>

                        <th class="text-end col-ending-balances" style="padding:18px 12px;">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Traditional</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Ending</span>
                            </div>
                        </th>

                        <th class="text-end col-ending-balances" style="padding:18px 12px;">
                            <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                <span style="font-size:1.05rem;font-weight:800;color:#111;">Roth</span>
                                <span style="font-size:0.78rem;font-weight:600;opacity:.9;color:#6B7280;">Ending</span>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in YearRows)
                    {
                        var rowClass = string.IsNullOrEmpty(row.Notes) ? string.Empty : "depleted";
                        <tr class="@rowClass">
                            <td class="col-year">@row.Year</td>
                            <td class="col-age">@row.AgeYou</td>
                            <td class="col-age">@row.AgePartner</td>
                            <td class="col-milestones">@row.Milestone</td>

                            <td class="text-end" style="font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums;">
                                @row.AmountNeeded.ToString("C0")
                            </td>

                            <!-- Income Sources -->
                            <td class="text-end col-income-sources" style="font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums;">
                                @row.SSYou.ToString("C0")
                            </td>

                            <td class="text-end col-income-sources" style="font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums;">
                                @row.SSPartner.ToString("C0")
                            </td>

                            <td class="text-end col-income-sources" style="font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums;">
                                @row.ReverseMortgage.ToString("C0")
                            </td>

                            <!-- Account Activity -->
                            <td class="text-end col-account-activity" style="font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums;">
                                @row.Growth.ToString("C0")
                            </td>

                            <td class="text-end col-account-activity" style="font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums;">
                                @row.TaxableWithdrawal.ToString("C0")
                            </td>

                            <td class="text-end col-account-activity" style="font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums;">
                                @row.TraditionalWithdrawal.ToString("C0")
                            </td>

                            <td class="text-end col-account-activity" style="font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums;">
                                @row.RothWithdrawal.ToString("C0")
                            </td>

                            <td class="text-end" style="color:#F56565; font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums; border-left: 1px solid #f2f4f7;">
                                @row.TaxesPaid.ToString("C0")
                            </td>

                            <!-- Ending Balances -->
                            <td class="text-end col-ending-balances" style="font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums;">
                                @row.EndingTaxable.ToString("C0")
                            </td>

                            <td class="text-end col-ending-balances" style="font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums;">
                                @row.EndingTraditional.ToString("C0")
                            </td>

                            <td class="text-end col-ending-balances" style="font-size:0.78rem; font-weight:600; text-align: right; font-variant-numeric: tabular-nums;">
                                @row.EndingRoth.ToString("C0")
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>

@code {
    private int _wizardOpenStep = 1;
    private bool showClearConfirm = false;
    private bool showClearResult = false;
    private bool clearSucceeded = false;

    // Helper properties to display life expectancy as age not calendar year
    private int DisplayLifeExpectancyYou => ComputeLifeExpectancyAge(Model?.LifeExpectancyYou ?? 0, Model?.CurrentAgeYou ?? 0);
    private int DisplayLifeExpectancyPartner => ComputeLifeExpectancyAge(Model?.LifeExpectancyPartner ?? 0, Model?.CurrentAgePartner ?? 0);

    private int ComputeLifeExpectancyAge(int lifeValue, int currentAge)
    {
        if (lifeValue <= 0) return 0;
        if (lifeValue > 1900)
        {
            // stored as a calendar year; convert to age if currentAge available, otherwise estimate from year
            if (currentAge > 0)
            {
                return currentAge + (lifeValue - DateTime.Now.Year);
            }
            else
            {
                // fallback: compute naive age as year - now
                return Math.Max(0, lifeValue - DateTime.Now.Year);
            }
        }

        // already an age
        return lifeValue;
    }

    // Keep existing code-behind methods in the partial class; helper methods for buttons call into the component's code-behind.
    private void OpenWizard(int step)
    {
        _wizardOpenStep = step;
        _isDataAvaiableForTheUser = true;
    }

    private void ConfirmClearAll()
    {
        // show confirmation modal
        showClearConfirm = true;
    }

    private async Task PerformClearAll()
    {
        showClearConfirm = false;
        StateHasChanged();

        try
        {
            // call into the partial class ClearAll implementation (in code-behind)
            clearSucceeded = await ClearAllAndOpenWizardAsync();
        }
        catch
        {
            clearSucceeded = false;
        }

        // show result modal
        showClearResult = true;
        StateHasChanged();
    }

    private void CloseClearResult()
    {
        showClearResult = false;

        // If clear succeeded, open wizard for re-entry (model already set by code-behind)
        if (clearSucceeded)
        {
            _isDataAvaiableForTheUser = true;
        }

        StateHasChanged();
    }

    private async Task SaveAndClose()
    {
        await Save();
        _isDataAvaiableForTheUser = false;
        StateHasChanged();
    }
}

