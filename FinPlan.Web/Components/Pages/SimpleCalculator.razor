@page "/simple-calculator"
@rendermode InteractiveServer

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-6 mx-auto">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h3 class="card-title mb-0">
                        <i class="bi bi-calculator"></i> Simple Calculator
                    </h3>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="firstNumber" class="form-label">First Number</label>
                        <input type="number" id="firstNumber" class="form-control"
                               @bind-value="firstNumber" @bind-value:event="oninput" />
                    </div>

                    <div class="mb-3">
                        <label for="secondNumber" class="form-label">Second Number</label>
                        <input type="number" id="secondNumber" class="form-control"
                               @bind-value="secondNumber" @bind-value:event="oninput" />
                    </div>

                    <div class="mb-3">
                        <label for="total" class="form-label">Total</label>
                        <!-- computed display; no binding -->
                        <div id="total" class="form-control bg-light fw-bold">@total.ToString("0.##")</div>
                        <div class="form-text">Updates automatically as you type!</div>
                    </div>
                    
                    @* <div class="mb-3">
                        <button @onclick="Calculate" class="btn btn-primary btn-lg">
                            <i class="bi bi-calculator"></i> Calculate
                        </button>
                    </div> *@
                    
                    @if (hasCalculated)
                    {
                        <div class="alert alert-success mt-3">
                            <strong>Result:</strong> @firstNumber + @secondNumber = @total.ToString("0.##")
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private decimal firstNumber;
    private decimal secondNumber;
    private decimal total => firstNumber + secondNumber;
    private bool hasCalculated = false;
    
    private void Calculate()
    {
        // This method provides visual feedback when the button is clicked
        Console.WriteLine($"Calculate button clicked: {firstNumber} + {secondNumber} = {total}");
        
        // Set the flag to show the result section
        hasCalculated = true;
        
        // Force UI to update
        StateHasChanged();
    }
}
