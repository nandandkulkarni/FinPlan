@page "/about-rewealthen"
@using System.ComponentModel.DataAnnotations
@using FinPlan.Shared
@using FinPlan.Shared.Enums
@using FinPlan.Shared.Models
@using FinPlan.Shared.Models.Savings
@using FinPlan.Shared.Services
@using FinPlan.Web.Services
@using Microsoft.AspNetCore.Components.Forms
@using System.Threading
@inject IJSRuntime JSRuntime
@inject IHttpClientFactory HttpClientFactory
@inject IConfiguration Configuration
@inject FinPlan.Web.Services.DebugMessageService DebugService
@inject FinPlan.Web.Services.UserGuidService UserGuidService
@inject NavigationManager Navigation

@namespace FinPlan.Web.Components.Pages

<PageTitle>About - ReWealth-en</PageTitle>

<style>
    :root {
        --brand-yellow: #FFD600;
        --muted: #6c757d;
        --card-bg: #ffffff;
        --card-radius: 8px;
    }

    /* Layout helpers used by this page */
    .container-wire {
        padding: 14px;
    }

    .page-header {
        text-align: center;
        font-weight: 700;
        font-size: 1.45rem;
        margin-bottom: 12px;
        color: #111;
    }

    .panel {
        background: var(--card-bg);
        border-radius: var(--card-radius);
        padding: 12px;
        border: 1px solid rgba(0,0,0,0.03);
        display: flex;
        flex-direction: column;
    }

    .section-panel {
        border: 3px solid var(--brand-yellow);
        border-radius: 10px;
        padding: 14px;
        background: #fff;
    }

    .section-card {
        border: 1px solid rgba(16,24,36,0.12);
        padding: 10px;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        background: #fff;
    }

    .card {
        background: #fff;
        border-radius: 8px;
        border: 1px solid rgba(0,0,0,0.03);
    }

    .small-note {
        font-size: 0.9rem;
        color: var(--muted);
        margin-top: 4px;
    }

    /* Simple responsive adjustments for mobile */
    @@media (max-width: 767.98px) {
        .container-wire { padding: 10px; }
        .panel { padding: 10px; }
        .section-panel { padding: 10px; border-width: 2px; }
        .page-header { font-size: 1.25rem; margin-bottom: 8px; }
        .section-card, .card { padding: 10px; }

        /* Collapse the two-column grid used inside section-panel into a single column on small screens */
        .section-panel > div[style*="grid-template-columns"] {
            display: block !important;
        }
    }
</style>
<div class="container-wire">
    <div class="page-header">
        <h3>About ReWealth-en</h3>
    </div>

    <div class="top-area">
        <div class="container-fluid">
            <div class="row g-3">
                <!-- Left column (2) -->
                <div class="col-12 col-md-2">
                    <div class="panel">
                        <div style="font-weight:700; margin-bottom:8px;">Quick Links</div>
                        <a href="/privacy-policy">Privacy Policy</a>
                        <a href="/feedback">Feedback</a>

                        <div style="display:flex; flex-direction:column; gap:6px;">
                            <a href="/" class="badge">Home</a>
                            <a href="/feedback" class="badge">Feedback</a>
                            <a href="/guides/how-to-use-wealth-journey-calculator" class="badge">How to</a>
                            <a href="/contact" class="badge">Contact</a>
                        </div>
                        <div style="margin-top:10px; font-size:0.85rem; color:var(--muted);">
                            <a href="/privacy-policy" class="badge">Privacy Policy</a>

                        </div>
                    </div>
                </div>

                <!-- Center combined column (8) -->
                <div class="col-12 col-md-8">
                    <div class="panel section-panel">
                        <div style="display:grid; grid-template-columns: repeat(2, 1fr); gap:12px;">
                            <div class="section-card">
                                <div>
                                    <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                                        @* <span class="step-badge">1</span> *@
                                        <div>About</div>
                                    </div>

                                    <div class="card p-3 mb-4">
                                        <div class="card-body">
                                            <h6>What You'll Find</h6>
                                            <ul>
                                                <li>Interactive cost-of-living and retirement planning calculators</li>
                                                <li>Savings growth estimators with scenario comparison options</li>
                                                <li>Year-by-year projections with per-account detail</li>
                                                <li>Export features for sharing and analysis (Excel, small datasets)</li>
                                            </ul>
                                            <p class="mb-0">
                                                These tools are designed for learning and exploration. They can help you model simple financial scenarios and better understand your options.
                                                <strong>They are not financial advice.</strong> For decisions that impact your finances, consider consulting a licensed professional.
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="section-card">
                                <div>
                                    <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                                        @* <span class="step-badge">2</span> *@
                                        <div>Team</div>
                                    </div>
                                    <div class="card p-3">
                                        <div class="card-body">
                                            <p>
                                                We're a small but dedicated team of engineers and financial enthusiasts who believe that planning for the future shouldn't feel overwhelming.
                                            </p>
                                            <p>
                                                With backgrounds spanning software development, data analysis, and personal finance, we've come together around a simple idea: to make financial planning clear, approachable, and empowering for everyone.
                                            </p>
                                            <p>
                                                Our focus is on building tools that take the guesswork out of financial decisionsâ€”whether it's saving for retirement, managing day-to-day expenses, or planning for
                                                long-term goals.
                                            </p>

                                            <p>
                                                We combine technical expertise with a genuine passion for helping people make smarter, more confident choices about their money.
                                                At the heart of what we do is a commitment to simplicity, transparency, and user-first design. We know that behind every calculation is a real person with real goals, and we're here to help make those goals feel achievable.
                                            </p>

                                            <p>Together, we are committed to empowering you with the tools and knowledge to make informed financial decisions.</p>

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="section-card">
                                <div>
                                    <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                                        @* <span class="step-badge">4</span> *@
                                        <div>Terms of Use & Disclaimer</div>
                                    </div>

                                    <div class="card p-3">
                                        <div class="card-body">
                                            <p>
                                                REWealth-en provides financial tools and calculators for educational purposes only. The content on this site is not
                                                financial, tax, legal, or investment advice. Always consult a qualified professional before making decisions that
                                                could affect your finances.
                                            </p>

                                            <p>
                                                We strive to provide accurate and up-to-date information, but we make no guarantees regarding completeness or accuracy.
                                                Calculator results are estimates based on the inputs provided and should not be relied upon as the sole basis for
                                                financial decisions.
                                            </p>

                                            <p>
                                                The site and its calculators are provided "as is," without warranties of any kind. We are not liable for any losses or
                                                damages resulting from use of the site or reliance on the calculators.
                                            </p>

                                            <p>
                                                By using REWealth-en, you agree to these terms. If you do not agree, please do not use the site.
                                            </p>

                                            <p>If you disagree with these terms, please do not use the site.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="section-card">
                                <div>
                                    <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                                        <div>Get in Touch</div>
                                    </div>
                                    <div class="card p-3 mb-4">
                                        <div class="card-body">
                                            <p>We'd love to hear from you. Send us a message below, and we'll get back to you within a few business days.</p>
                                            <p>
                                                Prefer email? Reach us directly at
                                                <a href="mailto:engineering@rewealthen.com">engineering@rewealthen.com</a>.
                                            </p>

                                            <EditForm Model="model.Contact" OnValidSubmit="Submit">
                                                <div class="mb-2">
                                                    <label class="form-label">Name</label>
                                                    <InputText class="form-control" @bind-Value="model.Contact.Name" disabled="@model.IsSubmitting" />
                                                </div>
                                                <div class="mb-2">
                                                    <label class="form-label">Email</label>
                                                    <InputText class="form-control" @bind-Value="model.Contact.Email" disabled="@model.IsSubmitting" />
                                                </div>
                                                <div class="mb-2">
                                                    <label class="form-label">Message</label>
                                                    <InputTextArea class="form-control" @bind-Value="model.Contact.Message" disabled="@model.IsSubmitting" />
                                                </div>
                                                <button class="btn btn-primary" type="submit" disabled="@model.IsSubmitting">
                                                    @if (model.IsSubmitting)
                                                    {
                                                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                                        <span>Sending...</span>
                                                    }
                                                    else
                                                    {
                                                        <span>Send</span>
                                                    }
                                                </button>
                                            </EditForm>

                                            @if (model.Submitted && !model.HasError)
                                            {
                                                <div class="alert alert-success mt-2">Thanks â€“ your feedback has been submitted successfully!</div>
                                            }

                                            @if (model.HasError)
                                            {
                                                <div class="alert alert-danger mt-2">@model.ErrorMessage</div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>


                    </div>
                </div>

                <!-- Right column (2) -->
                <div class="col-12 col-md-2">
                    <div class="panel">
                        @if (IsLocalhost)
                        {
                            <div class="card">
                                <h4>Admin Tools</h4>
                                <p>Manage cost of living templates for cities around the world.</p>
                                <div class="mt-3">
                                    <a href="/admin/city-templates" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-gear-fill"></i> CTA
                                    </a>
                                </div>
                                <p style="color:var(--muted); margin-top: 10px; font-size: 0.875rem;">
                                    Create and manage demographic profiles with sample expenses for different cities and lifestyles.
                                </p>
                            </div>
                            <div class="card">
                                <h4>Admin Tools</h4>
                                <p>Manage cost of living templates for cities around the world.</p>
                                <div class="mt-3">
                                    <a href="/reverse-mortgage" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-gear-fill"></i> RM
                                    </a>
                                </div>
                                <p style="color:var(--muted); margin-top: 10px; font-size: 0.875rem;">
                                    Create and manage demographic profiles with sample expenses for different cities and lifestyles.
                                </p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private AboutPageModel model = new();
    private bool hasInitialized = false;

    private bool IsLocalhost => Navigation.Uri.Contains("localhost") || Navigation.Uri.Contains("127.0.0.1");

    protected override async Task OnInitializedAsync()
    {
        // Use safe method that works during prerendering
        model.UserGuid = UserGuidService.GetTemporaryUserGuid();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasInitialized)
        {
            hasInitialized = true;
            try
            {
                // Now we can safely use JavaScript interop
                model.UserGuid = await UserGuidService.GetOrCreateUserGuidWithJSAsync();
                StateHasChanged();

                // Track page view once on first render
                _ = TrackPageViewAsync();
            }
            catch (Exception ex)
            {
                // Fallback if JS still fails
                Console.WriteLine($"Error getting user GUID: {ex.Message}");
            }
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task Submit()
    {
        if (model.IsSubmitting) return;

        model.IsSubmitting = true;
        model.HasError = false;
        model.ErrorMessage = string.Empty;
        StateHasChanged();

        try
        {
            var apiBaseUrl = GetApiBaseUrl();
            var url = $"{apiBaseUrl}/api/Contact/save";

            var request = new
            {
                Name = model.Contact.Name,
                Email = model.Contact.Email,
                Message = model.Contact.Message,
                UserGuid = model.UserGuid
            };

            var client = FinPlan.Web.Services.HttpCustomClientService.CreateRetryClient(HttpClientFactory);
            var json = System.Text.Json.JsonSerializer.Serialize(request);
            var content = new StringContent(json, System.Text.Encoding.UTF8, "application/json");

            var response = await client.PostAsync(url, content);

            if (response.IsSuccessStatusCode)
            {
                model.Submitted = true;
                // Reset the form
                model.Contact = new ContactModel();
            }
            else
            {
                model.HasError = true;
                model.ErrorMessage = "Sorry, there was an error sending your message. Please try again or contact us directly.";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error submitting contact form: {ex.Message}");
            model.HasError = true;
            model.ErrorMessage = "Sorry, there was an error sending your message. Please try again or contact us directly.";
        }
        finally
        {
            model.IsSubmitting = false;
            StateHasChanged();
        }
    }

    private async Task TrackPageViewAsync()
    {
        try
        {
            var apiBaseUrl = GetApiBaseUrl();
            var client = FinPlan.Web.Services.HttpCustomClientService.CreateRetryClient(HttpClientFactory);
            var route = Navigation.ToBaseRelativePath(Navigation.Uri);
            string? ua = null;
            try { ua = await JSRuntime.InvokeAsync<string>("eval", "navigator.userAgent"); } catch { }
            var dto = new { Page = "About", Route = route, UserGuid = model.UserGuid, UserAgent = ua };
            var json = System.Text.Json.JsonSerializer.Serialize(dto);
            using var content = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
            await client.PostAsync($"{apiBaseUrl}/api/Tracking/pageview", content);
        }
        catch { }
    }

    private string GetApiBaseUrl()
    {
#if DEBUG
        return Configuration["FinPlanSettings:ApiBaseUrlLocal"] ?? "https://localhost:7330";
#else
        return Configuration["FinPlanSettings:ApiBaseUrlCloud"] ?? "api-money-amperespark-bnbva5h5g6gme6fm.eastus2-01.azurewebsites.net";
#endif
    }

    private class AboutPageModel
    {
        public ContactModel Contact { get; set; } = new();
        public bool Submitted { get; set; } = false;
        public bool IsSubmitting { get; set; } = false;
        public bool HasError { get; set; } = false;
        public string ErrorMessage { get; set; } = string.Empty;
        public string UserGuid { get; set; } = string.Empty;
    }

    private class ContactModel
    {
        public string? Name { get; set; }
        public string? Email { get; set; }
        public string? Message { get; set; }
    }
}