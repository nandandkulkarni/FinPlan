@page "/savings-wealth-building"
@using FinPlan.Shared.Models.Savings
@using FinPlan.Shared.Services
@using FinPlan.Web.Components.Shared
@using FinPlan.Web.Services
@namespace FinPlan.Web.Components.Pages

@inject IJSRuntime JSRuntime
@inject IHttpClientFactory HttpClientFactory
@inject IConfiguration Configuration
@inject DebugMessageService DebugService
@inject UserGuidService UserGuidService


<style>
    body {
}
/* CSS Variables - convert to actual values for better compatibility */
.container-wire {
    padding: 14px;
}

.col-taxable, th.col-taxable {
    background-color: rgba(31,111,235,0.06);
}

th.col-taxable {
    color: #1F6FEB;
    font-weight: 700;
}

.col-traditional, th.col-traditional {
    background-color: rgba(56,178,172,0.06);
}

.col-roth, th.col-roth {
    background-color: rgba(109,93,252,0.06);
}

th.col-roth {
    color: #6D5DFC;
    font-weight: 700;
}

.col-totals, th.col-totals {
    background-color: rgba(255,214,0,0.06);
}

th.col-totals {
    color: #FFD600;
    font-weight: 700;
}

th.col-traditional {
    color: #38B2AC;
    font-weight: 700;
}

/* small touch to keep numeric alignment and readability */
.table td.col-taxable,
.table td.col-traditional,
.table td.col-roth,
.table td.col-totals {
    font-variant-numeric: tabular-nums;
}

.page-header {
    text-align: center;
    font-weight: 700;
    font-size: 1.45rem;
    margin-bottom: 12px;
    color: #111;
}

.top-area {
    position: relative;
}

.panel {
    background: #ffffff;
    border-radius: 10px;
    box-shadow: 0 6px 18px rgba(22,28,36,0.06);
    padding: 12px;
    border: 1px solid rgba(0,0,0,0.03);
    display: flex;
    flex-direction: column;
    flex: 1 1 0%;
}

/* Section card variant used inside the Plan Sections grid */
.section-card {
    border: 1px solid rgba(16,24,36,0.12);
    padding: 10px;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    min-height: 92px;
    background: #fff;
}

    .section-card .actions {
        margin-top: auto;
        display: flex;
        justify-content: flex-start;
        gap: 8px;
        padding-top: 6px;
    }

.btn-edit {
    background: #1F6FEB;
    color: #ffffff;
    border: 0;
    padding: 7px 12px;
    border-radius: 8px;
    cursor: pointer;
    font-weight: 600;
}

.btn-ghost {
    background: transparent;
    border: 1px solid #e6e9ee;
    color: #333;
    padding: 4px 6px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.8rem;
}

/* Highlighted rectangular panel with yellow border and subtle shadow */
.section-panel {
    border: 3px solid #FFD600;
    border-radius: 10px;
    box-shadow: 0 12px 30px rgba(13,38,76,0.06), 0 4px 18px rgba(255,214,0,0.08);
    padding: 14px;
    background: linear-gradient(180deg, #fff, #fff);
}

.step-badge {
    width: 36px;
    height: 36px;
    min-width: 36px;
    border-radius: 50%;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background: #FFD600;
    color: #111;
    font-weight: 800;
    font-size: 1rem;
    box-shadow: 0 4px 12px rgba(0,0,0,0.12);
    margin-right: 8px;
    flex-shrink: 0;
}

.small-note {
    font-size: 0.9rem;
    color: #6c757d;
    margin-top: 4px;
}

.badge {
    display: inline-block;
    padding: 6px 8px;
    border-radius: 999px;
    font-size: 0.85rem;
    background: #f1f3f5;
    color: #222;
    margin-right: 6px;
    text-decoration: none;
}

    .badge:hover {
        background: #e9ecef;
        text-decoration: none;
    }

.summary-money {
    font-size: 1.5rem;
    font-weight: 800;
    line-height: 1.05;
    font-variant-numeric: tabular-nums;
}

.grid-panel {
    margin-top: 12px;
}

.grid-header {
    display: flex;
    gap: 12px;
    align-items: center;
    margin-bottom: 8px;
}

.grid {
    width: 100%;
    border-radius: 8px;
    overflow: auto;
    background: #fff;
    border: 1px solid #e9ecef;
    box-shadow: 0 8px 24px rgba(12,18,30,0.04);
}

table {
    width: 100%;
    border-collapse: collapse;
    font-size: 0.98rem;
    min-width: 900px;
}

thead th {
    position: sticky;
    top: 0;
    background: #fff;
    padding: 10px 12px;
    border-bottom: 1px solid #eef2f6;
    text-align: left;
    font-weight: 700;
    color: #333;
}

tbody td {
    padding: 8px 12px;
    border-bottom: 1px solid #f2f4f7;
    vertical-align: middle;
}

.money-cell {
    text-align: right;
    font-variant-numeric: tabular-nums;
}

.legend {
    margin-left: auto;
    display: flex;
    gap: 8px;
    align-items: center;
    font-size: 0.95rem;
    color: #6c757d;
}

    .legend .swatch {
        width: 14px;
        height: 14px;
        border-radius: 4px;
        display: inline-block;
    }

@@media (max-width:1024px) {
    .top-area .row {
        gap: 12px;
    }
}

</style>

<PageTitle>Savings & Wealth Building</PageTitle>


<SavingsInputWizard Model="@calculatorModel"
                    Visible="@showWizard"
                    VisibleChanged="@(v => showWizard = v)"
                    OnFinished="HandleWizardFinished"
                    OnSave="SaveAsync"
                    InitialStep="@wizardOpenStep" />

<SetupSavingsSampleData Visible="@showSampleDataModal"
                        OnClose="@(() => showSampleDataModal = false)"
                        OnSampleDataSelected="HandleSampleDataSelected" />

<div class="container-wire">
    <div class="page-header">
        <h3>Savings & Wealth Building</h3>
    </div>

    <div class="top-area">
        <div class="container-fluid">
            <div class="row g-3">
                <div class="col-12 col-md-2">
                    <div class="panel">
                        <div style="font-weight:700; margin-bottom:8px;">Quick Links</div>
                        <div style="display:flex; flex-direction:column; gap:6px;">
                            <a href="/" class="badge">Home</a>
                            <a href="/contact" class="badge">Contact</a>
                        </div>
                    </div>
                </div>

                <div class="col-12 col-md-8">
                    @if (calculatorModel.IsModelEmpty())
                    {
                        <div style="position: relative;">
                            <div class="panel section-panel field-preview">
                                <h4 style="opacity: 0.4;">Plan Sections</h4>
                                <div style="display:grid; grid-template-columns: repeat(3, 1fr); gap:12px;">
                                    <div class="section-card preview-card">
                                        <div>
                                            <div style="display:flex; align-items:center; gap:8px; font-weight:700; opacity: 0.5;">
                                                <span class="step-badge">1</span>
                                                <div>Ages & Timeline</div>
                                            </div>
                                            <div class="small-note" style="margin-top:8px; opacity: 0.5;">Current Age: 0</div>
                                        </div>
                                        <div class="actions">
                                            <button class="btn-edit" disabled style="opacity: 0.3;">Edit</button>
                                        </div>
                                    </div>
                                    <div class="section-card preview-card">
                                        <div>
                                            <div style="display:flex; align-items:center; gap:8px; font-weight:700; opacity: 0.5;">
                                                <span class="step-badge">2</span>
                                                <div>Starting Balances</div>
                                            </div>
                                            <div class="small-note" style="margin-top:8px; opacity: 0.5;">Taxable: $0</div>
                                        </div>
                                        <div class="actions">
                                            <button class="btn-edit" disabled style="opacity: 0.3;">Edit</button>
                                        </div>
                                    </div>
                                    <div class="section-card preview-card">
                                        <div>
                                            <div style="display:flex; align-items:center; gap:8px; font-weight:700; opacity: 0.5;">
                                                <span class="step-badge">3</span>
                                                <div>Monthly Contributions</div>
                                            </div>
                                            <div class="small-note" style="margin-top:8px; opacity: 0.5;">Monthly: $0</div>
                                        </div>
                                        <div class="actions">
                                            <button class="btn-edit" disabled style="opacity: 0.3;">Edit</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="start-planning-overlay">
                                <div class="empty-state">
                                    <div style="font-size: 3rem; color: #6c757d; margin-bottom: 16px;">💰</div>
                                    <h4 style="color: #495057; margin-bottom: 16px;">Welcome to Savings Planning!</h4>
                                    <p style="color: #6c757d; margin-bottom: 24px; max-width: 500px; margin-left: auto; margin-right: auto;">
                                        Let's create your personalized savings plan. We'll walk you through setting up your timeline, 
                                        starting balances, and monthly contributions to project your wealth building journey.
                                    </p>
                                    <button class="btn btn-primary" style="padding: 12px 24px; font-size: 1.1rem; font-weight: 600;" @onclick="() => OpenWizard(1)">
                                        <i class="bi bi-play-circle" style="margin-right: 8px;"></i>
                                        Start Planning
                                    </button>
                                    <div style="margin-top: 16px; font-size: 0.9rem; color: #6c757d;">
                                        Takes about 2-3 minutes to complete
                                    </div>
                                    <div style="margin-top: 16px; display: flex; gap: 12px; justify-content: center;">
                                        <button class="btn btn-outline-primary" style="padding: 8px 16px; font-size: 0.9rem;" @onclick="() => showSampleDataModal = true">
                                            <i class="bi bi-clipboard-data" style="margin-right: 6px;"></i>
                                            Try with sample data
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
<div class="panel section-panel">
    <h4>Plan Sections</h4>

    <div style="display:grid; grid-template-columns: repeat(3, 1fr); gap:12px;">
        <div class="section-card">
            <div>
                <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                    <span class="step-badge">1</span>
                    <div>Milestones & ages</div>
                </div>

                <div class="small-note" style="margin-top:8px;">Current Age: @calculatorModel.CurrentAge</div>
                <div class="small-note" style="margin-top:8px;">Planned Retirement Age: @calculatorModel.RetirementAge</div>
                <div class="small-note" style="margin-top:8px;">Years until Retirement: @calculatorModel.Years</div>
            </div>
            <div class="actions">
                <button class="btn-edit" @onclick="() => OpenWizard(1)">Edit</button>
            </div>
        </div>

        <div class="section-card">
            <div>
                <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                    <span class="step-badge">2</span>
                    <div>Starting Balances</div>
                </div>

                <div class="small-note" style="margin-top:8px;">Taxable: @FormatMoneySafe(calculatorModel.InitialTaxableAmount)</div>
                <div class="small-note" style="margin-top:8px;">Traditional: @FormatMoneySafe(calculatorModel.InitialTraditionalAmount)</div>
                <div class="small-note" style="margin-top:8px;">Roth: @FormatMoneySafe(calculatorModel.InitialRothAmount)</div>

            </div>
            <div class="actions">
                <button class="btn-edit" @onclick="() => OpenWizard(2)">Edit</button>
            </div>
        </div>

        <div class="section-card">
            <div>
                <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                    <span class="step-badge">3</span>
                    <div>Monthly Contributions</div>
                </div>
                <div class="small-note" style="margin-top:8px;">Taxable: @calculatorModel.MonthlyTaxableContribution.ToString("C0")</div>
                <div class="small-note" style="margin-top:8px;">Traditional: @calculatorModel.MonthlyTraditionalContribution.ToString("C0")</div>
                <div class="small-note" style="margin-top:8px;">Roth: @calculatorModel.MonthlyRothContribution.ToString("C0")</div>
            </div>
            <div class="actions">
                <button class="btn-edit" @onclick="() => OpenWizard(3)">Edit</button>
            </div>
        </div>
        <div class="section-card">
            <div>
                <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                    <span class="step-badge">4</span>
                    <div>Estimated Growth Rate</div>
                </div>
                <div class="small-note">Taxable: @string.Format("{0:F1}%", calculatorModel.AnnualGrowthRateTaxable)</div>
                <div class="small-note">Traditional: @string.Format("{0:F1}%", calculatorModel.AnnualGrowthRateTraditional)</div>
                <div class="small-note">Roth: @string.Format("{0:F1}%", calculatorModel.AnnualGrowthRateRoth)</div>
            </div>
            <div class="actions">
                <button class="btn-edit" @onclick="() => OpenWizard(4)">Edit</button>
            </div>
        </div>

        <div class="section-card">
            <div>
                <div style="display:flex; align-items:center; gap:8px; font-weight:700;">
                    <span class="step-badge">5</span>
                    <div>Tax Treatment</div>
                </div>
                <div class="small-note" style="margin-top:8px;">Taxable IncomeType: @calculatorModel.TaxableIncomeType</div>
                <div class="small-note" style="margin-top:8px;">Tax Bracket: @calculatorModel.TaxBracket</div>
            </div>
            <div class="actions">
                <button class="btn-edit" @onclick="() => OpenWizard(5)">Edit</button>
            </div>
        </div>
    </div>
    @if (results != null)
    {
        <div class="mt-3">
            <div class="row mb-3">
                <div class="col-md-3"><div class="card bg-light"><div class="card-body text-center"><h4 class="text-primary summary-money">@results.FinalAmount.ToString("C0")</h4><p class="mb-0">Final Amount</p></div></div></div>
                <div class="col-md-3"><div class="card bg-light"><div class="card-body text-center"><h4 class="text-success summary-money">@results.TotalInterestEarned.ToString("C0")</h4><p class="mb-0">Growth</p></div></div></div>
                <div class="col-md-3"><div class="card bg-light"><div class="card-body text-center"><h4 class="text-info summary-money">@results.TotalContributions.ToString("C0")</h4><p class="mb-0">Total Contributions</p></div></div></div>
                <div class="col-md-3"><div class="card bg-light"><div class="card-body text-center"><h4 class="text-danger summary-money">@results.TotalTaxesPaid.ToString("C0")</h4><p class="mb-0">Total Taxes</p></div></div></div>
            </div>
        </div>
    }
</div>

                    }
                </div>

                <div class="col-12 col-md-2">
                    <div class="panel">
                        <div style="font-weight:700; margin-bottom:8px;">Debug</div>
                        <button class="btn-ghost" @onclick="ToggleRightDebug">Toggle</button>
                        @if (showRightDebug)
                        {
                            <div style="margin-top:8px; background:#fbfbfb; padding:8px; border-radius:6px; max-height:200px; overflow:auto;">
                                @foreach (var msg in DebugService.Messages.OrderByDescending(m => m.MessageTime).Take(5))
                                {
                                    <div style="margin-bottom:6px;">
                                        <small style="color:#6c757d;">@msg.MessageTime.ToString("HH:mm:ss")</small>
                                        <div>@msg.MessageText</div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="grid-panel panel mt-3">
        <div class="grid-header">
            <div style="font-weight:800; font-size:1rem;">Yearly Projection</div>
        </div>

        @if (calculatorModel.IsModelEmpty())
        {
            <div style="text-align: center; padding: 60px 20px; color: #6c757d;">
                <div style="font-size: 2.5rem; margin-bottom: 16px;">📊</div>
                <h5 style="color: #495057; margin-bottom: 12px;">No Projection Available</h5>
                <p style="margin-bottom: 20px;">Complete your savings plan setup to see projections.</p>
                <button class="btn btn-primary" @onclick="() => OpenWizard(1)">Get Started</button>
            </div>
        }
        else if (yearlyBreakdown?.Any() == true)
        {

            <div class="grid">
                <table class="table table-sm table-bordered" aria-label="Yearly projection">
                    <thead class="table-light">
                        <tr>
                            <th style="text-align:right; width:120px; padding:18px 12px; font-size:1.0rem;">Year</th>
                            <th style="text-align:right; width:90px; padding:18px 12px; font-size:1.0rem;">Age</th>

                            <th class="col-taxable" style="background-color: rgba(31,111,235,0.06); color:#1F6FEB; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Taxable</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Year Begin</span>
                                </div>
                            </th>
                            <th class="col-taxable" style="background-color: rgba(31,111,235,0.06); color:#1F6FEB; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Taxable</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Contribution</span>
                                </div>
                            </th>
                            <th class="col-taxable" style="background-color: rgba(31,111,235,0.06); color:#1F6FEB; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Taxable</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Growth</span>
                                </div>
                            </th>
                            <th class="col-taxable" style="background-color: rgba(31,111,235,0.06); color:#1F6FEB; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Tax</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Paid</span>
                                </div>
                            </th>
                            <th class="col-taxable" style="background-color: rgba(31,111,235,0.06); color:#1F6FEB; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Taxable</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Year End</span>
                                </div>
                            </th>

                            <th class="col-traditional" style="background-color: rgba(56,178,172,0.06); color:#38B2AC; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Traditional</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Year Begin</span>
                                </div>
                            </th>
                            <th class="col-traditional" style="background-color: rgba(56,178,172,0.06); color:#38B2AC; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Traditional</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Contribution</span>
                                </div>
                            </th>
                            <th class="col-traditional" style="background-color: rgba(56,178,172,0.06); color:#38B2AC; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Traditional</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Growth</span>
                                </div>
                            </th>
                            <th class="col-traditional" style="background-color: rgba(56,178,172,0.06); color:#38B2AC; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Traditional</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Year End</span>
                                </div>
                            </th>

                            <th class="col-roth" style="background-color: rgba(109,93,252,0.06); color:#6D5DFC; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Roth</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Year Begin</span>
                                </div>
                            </th>
                            <th class="col-roth" style="background-color: rgba(109,93,252,0.06); color:#6D5DFC; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Roth</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Contribution</span>
                                </div>
                            </th>
                            <th class="col-roth" style="background-color: rgba(109,93,252,0.06); color:#6D5DFC; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Roth</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Growth</span>
                                </div>
                            </th>
                            <th class="col-roth" style="background-color: rgba(109,93,252,0.06); color:#6D5DFC; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Roth</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Year End</span>
                                </div>
                            </th>

                            <th class="text-end col-totals" style="background-color: rgba(255,214,0,0.06); color:#FFD600; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Total</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Contributions</span>
                                </div>
                            </th>
                            <th class="text-end col-totals" style="background-color: rgba(255,214,0,0.06); color:#FFD600; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Total</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Growth</span>
                                </div>
                            </th>
                            <th class="text-end col-totals" style="background-color: rgba(255,214,0,0.06); color:#FFD600; font-weight:700; padding:18px 12px;">
                                <div style="display:flex;flex-direction:column;align-items:flex-end;text-align:right;gap:2px;line-height:1;">
                                    <span style="font-size:1.05rem;font-weight:800;">Total</span>
                                    <span style="font-size:0.78rem;font-weight:600;opacity:.9;">Year End</span>
                                </div>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (yearlyBreakdown == null || !yearlyBreakdown.Any())
                        {
                            <tr><td colspan="15" class="text-center text-muted">No projection rows available. Run Calculate to generate projections.</td></tr>
                        }
                        else
                        {
                            foreach (var r in yearlyBreakdown)
                            {

                                var age = calculatorModel.CurrentAge + r.Year; // approximate

                                <tr>
                                    <td>@r.Year</td>
                                    <td>@age</td>

                                    <!-- Taxable columns -->
                                    <!-- Taxable columns with inline styles -->
                                    <td class="text-end col-taxable"
                                        style="font-size:0.78rem;font-weight:600;background-color: rgba(31,111,235,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TaxableBOYBalance)
                                    </td>
                                    <td class="text-end col-taxable"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(31,111,235,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TaxableContribution)
                                    </td>
                                    <td class="text-end col-taxable"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(31,111,235,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TaxableInterest)
                                    </td>
                                    <td class="text-end col-taxable"
                                        style="color:#F56565; font-size:0.78rem;font-weight:600;background-color:rgba(31,111,235,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TaxesPaid)
                                    </td>
                                    <td class="text-end col-taxable"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(31,111,235,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TaxableEOYBalance)
                                    </td>

                                    <!-- Traditional columns with inline styles -->
                                    <td class="text-end col-traditional"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(56,178,172,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TraditionalBOYBalance)
                                    </td>
                                    <td class="text-end col-traditional"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(56,178,172,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TraditionalContribution)
                                    </td>

                                    <td class="text-end col-traditional"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(56,178,172,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TraditionalInterest)
                                    </td>
                                    <td class="text-end col-traditional"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(56,178,172,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TraditionalEOYBalance)
                                    </td>

                                    <!-- Roth columns with inline styles -->
                                    <td class="text-end col-roth"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(109,93,252,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.RothBOYBalance)
                                    </td>
                                    <td class="text-end col-roth"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(109,93,252,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.RothContribution)
                                    </td>
                                    <td class="text-end col-roth"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(109,93,252,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.RothInterest)
                                    </td>
                                    <td class="text-end col-roth"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(109,93,252,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.RothEOYBalance)
                                    </td>

                                    <!-- Totals columns with inline styles -->
                                    <td class="text-end col-totals"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(255,214,0,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TotalContributions)
                                    </td>
                                    <td class="text-end col-totals"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(255,214,0,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TotalGrowth)
                                    </td>
                                    <td class="text-end col-totals"
                                        style="font-size:0.78rem;font-weight:600;background-color:rgba(255,214,0,0.06); background-clip: padding-box; text-align: right; font-variant-numeric: tabular-nums;">
                                        @FormatMoneySafe(r.TotalEOYBalance)
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>

    <div class="mt-3 p-3" style="background-color: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px;">
        <div style="display: flex; align-items: flex-start; gap: 8px;">
            <div style="color: #856404; margin-top: 2px;">
                <i class="bi bi-exclamation-triangle" style="font-size: 1.1rem;"></i>
            </div>
            <div>
                <div style="font-weight: 600; color: #856404; margin-bottom: 8px;">Important Disclaimers</div>
                <div style="font-size: 0.9rem; color: #856404; line-height: 1.4;">
                    <p style="margin-bottom: 8px;"><strong>Not Financial Advice:</strong> This tool is for educational purposes only. Results are projections based on your inputs and assumptions.</p>
                    <p style="margin-bottom: 0;"><strong>Professional Guidance:</strong> Consider consulting with qualified financial advisors who can provide personalized advice for your complete financial situation.</p>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private bool showWizard = false;
    private int wizardOpenStep = 1;
    private bool showSampleDataModal = false;
    private bool showRightDebug = false;

    public SavingsCalculatorModel calculatorModel { get; set; } = new();
    private SavingsResults? results;
    private List<YearlyBreakdown> yearlyBreakdown = new();
    private string userGuid = string.Empty;
    private string calculatorType = "TestSavings_yours";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try 
            { 
                userGuid = await UserGuidService.GetOrCreateUserGuidAsync(); 
                await LoadAsync();
                Calculate();
                StateHasChanged();
            } 
            catch (Exception ex) 
            { 
                DebugService.AddMessage($"Init error: {ex.Message}"); 
            }
        }
    }

    private void Calculate()
    {
        try
        {
            var calculator = new SavingsCalculationEngine();
            results = calculator.Calculate(calculatorModel);
            yearlyBreakdown = calculator.GetYearlyBreakdown(calculatorModel);
        }
        catch (Exception ex)
        {
            DebugService.AddMessage($"Calc error: {ex.Message}");
        }
    }

    private async Task LoadAsync()
    {
        try
        {
            var apiBaseUrl = GetApiBaseUrl();
            var url = $"{apiBaseUrl}/api/FinPlan/load?userGuid={userGuid}&calculatorType={calculatorType}";
            var client = HttpCustomClientService.CreateRetryClient(HttpClientFactory);
            var response = await client.GetAsync(url);
            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                var loadedModel = System.Text.Json.JsonSerializer.Deserialize<SavingsCalculatorModel>(json, 
                    new System.Text.Json.JsonSerializerOptions { PropertyNameCaseInsensitive = true });
                if (loadedModel != null)
                {
                    calculatorModel = loadedModel;
                }
            }
        }
        catch (Exception ex)
        {
            DebugService.AddMessage($"Load error: {ex.Message}");
        }
    }

    private async Task SaveAsync()
    {
        try
        {
            calculatorModel.LastUpdateDate = DateTime.UtcNow;
            var saveRequest = new PersistSavingsRequest 
            { 
                UserGuid = userGuid, 
                CalculatorType = calculatorType, 
                Data = calculatorModel 
            };
            var json = System.Text.Json.JsonSerializer.Serialize(saveRequest);
            using var content = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
            var client = HttpCustomClientService.CreateRetryClient(HttpClientFactory);
            var response = await client.PostAsync($"{GetApiBaseUrl()}/api/FinPlan/save", content);
            if (!response.IsSuccessStatusCode)
            {
                DebugService.AddMessage($"Save failed: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            DebugService.AddMessage($"Save error: {ex.Message}");
        }
    }

    private async Task HandleWizardFinished((int AgeYou, int AgePartner) ages)
    {
        try
        {
            if (ages.AgeYou > 0) calculatorModel.RetirementAge = ages.AgeYou;
            await SaveAsync();
            Calculate();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            DebugService.AddMessage($"Wizard finish error: {ex.Message}");
        }
    }

    private async Task HandleSampleDataSelected(SavingsCalculatorModel sampleModel)
    {
        calculatorModel = sampleModel;
        await SaveAsync();
        Calculate();
        StateHasChanged();
    }

    private void OpenWizard(int step)
    {
        wizardOpenStep = step;
        showWizard = true;
    }

    private void ToggleRightDebug() 
    { 
        showRightDebug = !showRightDebug; 
        StateHasChanged(); 
    }

    private string FormatMoneySafe(decimal? v) => v.HasValue ? v.Value.ToString("C0") : "-";


    private string FormatMoney(decimal? value) => value?.ToString("C0") ?? "-";

    private string GetApiBaseUrl()
    {
#if DEBUG
        return Configuration["FinPlanSettings:ApiBaseUrlLocal"] ?? "https://localhost:7330";
#else
        return Configuration["FinPlanSettings:ApiBaseUrlCloud"] ?? "https://api.finplan.example";
#endif
    }
}