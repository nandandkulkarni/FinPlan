@page "/missing-field-demo"
@using FinPlan.Shared.Models.Savings
@using FinPlan.Web.Components.Shared

<style>
    /* Basic card styles */
    .demo-card {
        border: 1px solid rgba(16,24,36,0.12);
        padding: 16px;
        border-radius: 8px;
        margin-bottom: 20px;
        background: #fff;
    }

    .demo-header {
        font-weight: 700;
        font-size: 1.1rem;
        margin-bottom: 12px;
        color: #111;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .small-note {
        font-size: 0.9rem;
        color: #6c757d;
        margin-top: 4px;
    }

    /* Option 1: Simple Red Rectangle */
    .missing-field-indicator {
        display: inline-block;
        background-color: rgba(220, 53, 69, 0.12);
        color: #dc3545;
        padding: 2px 8px;
        border-radius: 4px;
        border: 1px solid rgba(220, 53, 69, 0.3);
        font-size: 0.7rem;
        font-weight: 600;
        margin-left: 8px;
    }

    /* Option 2: Status Badges with Icons */
    .missing-badge {
        background-color: rgba(220, 53, 69, 0.1);
        color: #dc3545;
        padding: 2px 8px;
        border-radius: 4px;
        font-size: 0.7rem;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
    }

    /* Option 3: Field Highlighting with Visual Indicators */
    .field-missing {
        padding-left: 8px;
        border-left: 3px solid #dc3545;
    }

    .missing-value {
        color: #dc3545;
        font-style: italic;
        font-weight: 500;
    }

    /* Option 4: Card-Level Completion Indicators */
    .incomplete-section {
        border: 1px solid rgba(220, 53, 69, 0.3);
        box-shadow: 0 2px 8px rgba(220, 53, 69, 0.1);
    }

    .completion-indicator {
        position: absolute;
        top: 8px;
        right: 8px;
        font-size: 0.75rem;
    }

        .completion-indicator .complete {
            color: #198754;
        }

        .completion-indicator .incomplete {
            color: #dc3545;
        }

    /* Option 5: Progress Bar */
    .setup-progress {
        margin-bottom: 20px;
    }

    .progress-text {
        display: flex;
        justify-content: space-between;
        margin-bottom: 6px;
    }

    .step-badge {
        width: 36px;
        height: 36px;
        min-width: 36px;
        border-radius: 50%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        background: #FFD600;
        color: #111;
        font-weight: 800;
        font-size: 1rem;
        box-shadow: 0 4px 12px rgba(0,0,0,0.12);
        margin-right: 8px;
        flex-shrink: 0;
    }

    .info-icon {
        font-size: 0.85rem;
        color: #1F6FEB;
        cursor: pointer;
        margin-left: 0.25rem;
        transition: transform 0.2s ease, color 0.2s ease;
    }

        .info-icon:hover {
            transform: scale(1.1);
            color: #0E62DA;
        }

    .info-tooltip {
        background-color: #EBF5FF;
        border: 1px solid #BEDAFF;
        border-radius: 6px;
        padding: 0.5rem 1rem;
        margin-top: 0.25rem;
        margin-bottom: 0.5rem;
        font-size: 0.85rem;
        position: relative;
        line-height: 1.4;
    }
</style>

<PageTitle>Missing Field Indicator Demo</PageTitle>

<div class="container mt-4">
    <h2>Missing Field Indicator Demo</h2>
    <p>Different approaches to highlight missing or required fields in the form.</p>

    <!-- Progress indicator -->
    <div class="setup-progress mb-3">
        <div class="progress-text">
            <span>Setup Progress: @GetCompletionPercentage()%</span>
            <span>@GetCompletedSections() of 5 sections completed</span>
        </div>
        <div class="progress" style="height: 8px;">
            <div class="progress-bar bg-success" role="progressbar"
                 style="width: @GetCompletionPercentage()%;"
                 aria-valuenow="@GetCompletionPercentage()" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
    </div>

    <div class="row">
        <!-- Option 1: Simple Red Rectangle -->
        <div class="col-md-6">
            <div class="demo-card">
                <div class="demo-header">
                    <span class="step-badge">1</span>
                    Option 1: Simple Red Rectangle
                </div>
                <p>Basic rectangular indicator next to missing fields.</p>

                <div class="small-note" style="margin-top:8px;">
                    <span class="bi bi-info-circle info-icon"></span>
                    Current Age: @(demoModel.CurrentAge > 0 ? demoModel.CurrentAge.ToString() : "Not set")
                    @if (demoModel.CurrentAge <= 0)
                    {
                        <span class="missing-field-indicator">REQUIRED</span>
                    }
                </div>

                <div class="small-note" style="margin-top:8px;">
                    <span class="bi bi-info-circle info-icon"></span>
                    Retirement Age: @demoModel.RetirementAge
                </div>

                <div class="small-note" style="margin-top:8px;">
                    <span class="bi bi-info-circle info-icon"></span>
                    Monthly Contribution: @demoModel.MonthlyTaxableContribution.ToString("C0")
                    @if (demoModel.MonthlyTaxableContribution <= 0)
                    {
                        <span class="missing-field-indicator">REQUIRED</span>
                    }
                </div>
            </div>
        </div>

        <!-- Option 2: Status Badges with Icons -->
        <div class="col-md-6">
            <div class="demo-card">
                <div class="demo-header">
                    <span class="step-badge">2</span>
                    Option 2: Status Badges with Icons
                </div>
                <p>Badges with warning icons to highlight missing fields.</p>

                <div class="small-note" style="margin-top:8px; display: flex; align-items: center; justify-content: space-between;">
                    <div>
                        <span class="bi bi-info-circle info-icon"></span>
                        Current Age: @(demoModel.CurrentAge > 0 ? demoModel.CurrentAge.ToString() : "Not set")
                    </div>
                    @if (demoModel.CurrentAge <= 0)
                    {
                        <span class="missing-badge">
                            <i class="bi bi-exclamation-triangle-fill me-1"></i>Required
                        </span>
                    }
                </div>

                <div class="small-note" style="margin-top:8px; display: flex; align-items: center; justify-content: space-between;">
                    <div>
                        <span class="bi bi-info-circle info-icon"></span>
                        Retirement Age: @demoModel.RetirementAge
                    </div>
                </div>

                <div class="small-note" style="margin-top:8px; display: flex; align-items: center; justify-content: space-between;">
                    <div>
                        <span class="bi bi-info-circle info-icon"></span>
                        Monthly Contribution: @demoModel.MonthlyTaxableContribution.ToString("C0")
                    </div>
                    @if (demoModel.MonthlyTaxableContribution <= 0)
                    {
                        <span class="missing-badge">
                            <i class="bi bi-exclamation-triangle-fill me-1"></i>Required
                        </span>
                    }
                </div>
            </div>
        </div>

        <!-- Option 3: Field Highlighting with Visual Indicators -->
        <div class="col-md-6">
            <div class="demo-card">
                <div class="demo-header">
                    <span class="step-badge">3</span>
                    Option 3: Field Highlighting
                </div>
                <p>Highlighting the field and changing the value display.</p>

                <div class="small-note @(demoModel.CurrentAge <= 0 ? "field-missing" : "")" style="margin-top:8px;">
                    <span class="bi bi-info-circle info-icon"></span>
                    Current Age:
                    @if (demoModel.CurrentAge > 0)
                    {
                        <span>@demoModel.CurrentAge</span>
                    }
                    else
                    {
                        <span class="missing-value">
                            <i class="bi bi-dash-circle-dotted me-1"></i>Missing
                        </span>
                    }
                </div>

                <div class="small-note" style="margin-top:8px;">
                    <span class="bi bi-info-circle info-icon"></span>
                    Retirement Age: @demoModel.RetirementAge
                </div>

                <div class="small-note @(demoModel.MonthlyTaxableContribution <= 0 ? "field-missing" : "")" style="margin-top:8px;">
                    <span class="bi bi-info-circle info-icon"></span>
                    Monthly Contribution:
                    @if (demoModel.MonthlyTaxableContribution > 0)
                    {
                        <span>@demoModel.MonthlyTaxableContribution.ToString("C0")</span>
                    }
                    else
                    {
                        <span class="missing-value">
                            <i class="bi bi-dash-circle-dotted me-1"></i>Missing
                        </span>
                    }
                </div>
            </div>
        </div>

        <!-- Option 4: Card-Level Completion Indicators -->
        <div class="col-md-6">
            <div class="demo-card @(IsSectionComplete(1) ? "" : "incomplete-section")" style="position: relative;">
                <div class="completion-indicator">
                    @if (IsSectionComplete(1))
                    {
                        <span class="complete"><i class="bi bi-check-circle-fill"></i> Complete</span>
                    }
                    else
                    {
                        <span class="incomplete"><i class="bi bi-x-circle-fill"></i> Incomplete</span>
                    }
                </div>

                <div class="demo-header">
                    <span class="step-badge">4</span>
                    Option 4: Card-Level Indicators
                </div>
                <p>Showing completion status at the card level.</p>

                <div class="small-note" style="margin-top:8px;">
                    <span class="bi bi-info-circle info-icon"></span>
                    Current Age: @(demoModel.CurrentAge > 0 ? demoModel.CurrentAge.ToString() : "Not set")
                </div>

                <div class="small-note" style="margin-top:8px;">
                    <span class="bi bi-info-circle info-icon"></span>
                    Retirement Age: @demoModel.RetirementAge
                </div>

                <div class="small-note" style="margin-top:8px;">
                    <span class="bi bi-info-circle info-icon"></span>
                    Monthly Contribution: @demoModel.MonthlyTaxableContribution.ToString("C0")
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    Controls
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label">Current Age</label>
                            <input type="number" class="form-control" @bind="demoModel.CurrentAge" min="0" max="100" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Retirement Age</label>
                            <input type="number" class="form-control" @bind="demoModel.RetirementAge" min="0" max="100" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Monthly Contribution ($)</label>
                            <input type="number" class="form-control" @bind="demoModel.MonthlyTaxableContribution" min="0" />
                        </div>
                    </div>
                    <div class="mt-3">
                        <button class="btn btn-primary me-2" @onclick="ResetFields">Reset Fields</button>
                        <button class="btn btn-success" @onclick="FillFields">Fill All Fields</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private SavingsCalculatorModel demoModel = new SavingsCalculatorModel();

    // Initialize with some values missing
    protected override void OnInitialized()
    {
        demoModel.CurrentAge = 0;
        demoModel.RetirementAge = 65;
        demoModel.MonthlyTaxableContribution = 0;
        demoModel.MonthlyTraditionalContribution = 0;
        demoModel.MonthlyRothContribution = 0;
        demoModel.AnnualGrowthRateTaxable = 7;
    }

    private bool IsSectionComplete(int sectionNumber)
    {
        return sectionNumber switch
        {
            1 => demoModel.CurrentAge > 0 && demoModel.MonthlyTaxableContribution > 0,
            _ => true
        };
    }

    private int GetCompletedSections()
    {
        int count = 0;
        for (int i = 1; i <= 5; i++)
        {
            if (IsSectionComplete(i)) count++;
        }
        return count;
    }

    private int GetCompletionPercentage()
    {
        return (GetCompletedSections() * 100) / 5;
    }

    private void ResetFields()
    {
        demoModel.CurrentAge = 0;
        demoModel.MonthlyTaxableContribution = 0;
    }

    private void FillFields()
    {
        demoModel.CurrentAge = 30;
        demoModel.MonthlyTaxableContribution = 500;
    }
}