@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject FinPlan.Web.Services.DebugMessageService DebugService
@inject IWebHostEnvironment Env

<style>
    .nav-debug-window {
        background: rgba(0,0,0,0.85);
        color: #fff;
        padding: 10px 14px;
        border-radius: 8px;
        font-size: 13px;
        margin-bottom: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.2);
        max-height: 180px;
        overflow-y: auto;
    }

    .debug-bottom {
        position: fixed;
        left: 0;
        bottom: 0;
        background-color: #FFD600;
        color: #222;
        border-radius: 8px 8px 0 0;
        font-size: 0.95em;
        min-width: 200px;
        max-width: 250px;
        max-height: 660px;
        overflow-y: auto;
        z-index: 9999;
        box-shadow: 0 -2px 8px rgba(0,0,0,0.07);
        padding: 10px 18px;
        overflow-y: auto;
        font-size: 0.75em;
    }

    /* small discrete toggle styling */
    .debug-toggle-btn {
        background: transparent;
        border: none;
        color: inherit;
        padding: 6px;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 6px;
    }

        .debug-toggle-btn .bi {
            font-size: 1.05rem;
        }
</style>



<div class="nav-scrollable" onclick="(function(){ const btn = document.querySelector('.navbar-toggler'); if (btn && typeof btn.click === 'function') { try { btn.click(); } catch(e) { console.error('nav-scrollable click failed', e); } } })()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill" aria-hidden="true"></span> Dashboard
            </NavLink>
        </div>
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="living-cost" title="Cost of living projections">
                <span class="bi bi-list-ul" aria-hidden="true"></span> Living Cost Estimator
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="retirement-fire" title="Financial Independence, Retire Early">
                <span class="bi bi-wallet2" aria-hidden="true"></span> Retirement Planner (FIRE)
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="wealth-journey" title="How your savings will grow">
                <span class="bi bi-calculator" aria-hidden="true"></span> Savings Growth Projection
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="howmuch-to-save-per-month" title="Monthly saving projections">
                <span class="bi bi-calculator" aria-hidden="true"></span> Goal-Based Calculator
            </NavLink>
        </div>
        <!-- Informational pages -->
        <div class="nav-item px-3 mt-2">
            <NavLink class="nav-link" href="/about" title="About this site">
                <span class="bi bi-info-circle" aria-hidden="true"></span> About
            </NavLink>
        </div>
        @if (Env.IsDevelopment())
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/debug/json-viewer" title="Debug JSON viewer (Development only)">
                    <span class="bi bi-bug" aria-hidden="true"></span> Debug JSON
                </NavLink>
            </div>
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/contact" title="Contact">
                <span class="bi bi-envelope" aria-hidden="true"></span> Contact
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/privacy-policy" title="Privacy Policy">
                <span class="bi bi-shield-lock" aria-hidden="true"></span> Privacy Policy
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/terms-of-use" title="Terms of Use">
                <span class="bi bi-file-earmark-text" aria-hidden="true"></span> Terms of Use
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/disclaimer" title="Disclaimer">
                <span class="bi bi-exclamation-triangle" aria-hidden="true"></span> Disclaimer
            </NavLink>
        </div>

        <!-- Authentication links -->
        <div class="nav-item px-3 mt-3">
            <AuthorizeView>
                <Authorized Context="auth">
                    <div class="d-flex align-items-center">
                        <span class="me-2"><span class="bi bi-person-circle" aria-hidden="true"></span> Hello, <strong>@GetDisplayName(auth.User)</strong></span>
                        <a class="btn btn-sm btn-outline-secondary ms-2" @onclick="SignOut" style="cursor:pointer;">Sign out</a>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <a class="nav-link" style="cursor:pointer;" @onclick="SignInWithGoogle">
                        <span class="bi bi-google" aria-hidden="true"></span> Sign in (Google)
                    </a>
                </NotAuthorized>
            </AuthorizeView>
        </div>


        <!-- Discrete debug toggle (hidden by default) -->
        <div class="nav-item px-3">
            <button class="debug-toggle-btn nav-link" title="Toggle debug window" @onclick="ToggleDebug" aria-pressed="@ShowDebug.ToString().ToLower()">
                <span class="bi @(ShowDebug ? "bi-bug-fill" : "bi-bug")" aria-hidden="true"></span>
                <span class="d-none d-md-inline" style="font-size:0.85rem">Debug</span>
            </button>
        </div>

        @if (ShowDebug)
        {
            <div class="debug-bottom p-2">
                <strong>Debug:</strong>
                @foreach (var msg in DebugService.Messages.OrderByDescending(prop => prop.MessageTime))
                {
                    <div>
                        <span>@msg.MessageTime.ToString("HH:mm:ss.ff"): </span>
                        <span>@msg.MessageText</span>
                    </div>
                }
            </div>
        }
    </nav>
</div>

@code {
    private bool ShowDebug { get; set; } = false; // hidden by default

    protected override void OnInitialized()
    {
        DebugService.MessagesChanged += OnMessagesChanged;
    }

    private void OnMessagesChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    private void ToggleDebug()
    {
        ShowDebug = !ShowDebug;
    }

    public void Dispose()
    {
        DebugService.MessagesChanged -= OnMessagesChanged;
    }
    
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationStateTask { get; set; }

    private ClaimsPrincipal? User { get; set; }

    [Inject]
    private NavigationManager? Navigation { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (authenticationStateTask is not null)
        {
            var authState = await authenticationStateTask;
            User = authState.User;
        }
        await base.OnParametersSetAsync();
    }

    private void SignInWithGoogle()
    {
        // Navigate to a server endpoint that will trigger the Google challenge
        if (Navigation is not null)
        {
            Navigation.NavigateTo("/signin-google-challenge", forceLoad: true);
        }
    }

    private void SignOut()
    {
        // Navigate to a server endpoint that will sign the user out
        if (Navigation is not null)
        {
            Navigation.NavigateTo("/signout", forceLoad: true);
        }
    }

    // get best display name from claims, fallback to Identity.Name
    string GetDisplayName(ClaimsPrincipal user)
    {
        if (user is null) return "User";
        var nameClaim = user.FindFirst(c => c.Type == "name")?.Value
                        ?? user.FindFirst(c => c.Type == "given_name")?.Value
                        ?? user.Identity?.Name;
        return nameClaim ?? "User";
    }
}